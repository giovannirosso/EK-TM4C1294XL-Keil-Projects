


ARM Macro Assembler    Page 1 


    1 00000000         ; Exemplo.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 12/03/2018
    5 00000000         
    6 00000000         ; ------------------------------------------------------
                       -------------------------
    7 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    8 00000000         ; ------------------------------------------------------
                       -------------------------
    9 00000000         ; Declarações EQU - Defines
   10 00000000         ;<NOME>         EQU <VALOR>
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         ; Área de Dados - Declarações de variáveis
   13 00000000                 AREA             DATA, ALIGN=2
   14 00000000         
   15 00000000 00 00 00 
              00 00 00 
              00 00 00 vetor   SPACE            9           ;ALOCA O 'VETOR'
   16 00000009         
   17 00000009         ; Se alguma variável for chamada em outro arquivo
   18 00000009         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   19 00000009         ; partir de outro arquivo
   20 00000009         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   21 00000009         ; de <tam> bytes a partir da primeira 
   22 00000009         ; posição da RAM  
   23 00000009         
   24 00000009         ; ------------------------------------------------------
                       -------------------------
   25 00000009         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   26 00000009         ;                  código
   27 00000009                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   28 00000000         
   29 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   30 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   31 00000000         ; outro arquivo. No caso startup.s
   32 00000000         
   33 00000000         ; Se chamar alguma função externa 
   34 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   35 00000000         ; função <func>
   36 00000000         
   37 00000000         ; ------------------------------------------------------
                       -------------------------
   38 00000000         ; Função main()
   39 00000000         Start
   40 00000000         ; Comece o código aqui <================================
                       ======================
   41 00000000         
   42 00000000         ; Lab 0 - GIOVANNI E ANDERSON



ARM Macro Assembler    Page 2 


   43 00000000         
   44 00000000 480B            LDR              R0,= vetor  ;R0 RECEBE O ENDERE
                                                            ÇO DA PRIMEIRA POSI
                                                            ÇÃO
   45 00000002         ; LDR R1,= 0x2000000A   ;R1 RECEBE O ENDEREÇO DA ULTIMA 
                       POSIÇÃO (DESNECESSÁRIO)
   46 00000002         
   47 00000002 F04F 0400       MOV              R4, #0      ;AUX QUE PERCORRE
   48 00000006 F04F 0500       MOV              R5, #0      ;AUX PARA O VALOR A
                                                             SER OTIMIZADO
   49 0000000A         
   50 0000000A         loop
   51 0000000A 5D42            LDRB             R2, [R0, R5] ;R2 RECEBE O VALOR
                                                             DA PRIMEIRA POSIÇÃ
                                                            O + VALOR DO INICIO
                                                            
   52 0000000C 5D03            LDRB             R3, [R0, R4] ;R3 RECEBE VALOR D
                                                            A PROXIMA POSIÇÃO
   53 0000000E         
   54 0000000E 429A            CMP              R2, R3      ;REALIZA A COMPARAÇ
                                                            ÃO
   55 00000010 BFC2            ITTT             GT          ;CONDIÇÃO PARA TROC
                                                            A DOS VALORES
   56 00000012 469C            MOVGT            R12, R3     ;REALIZA A TROCA CO
                                                            M AUZILIARES
   57 00000014 4613            MOVGT            R3, R2
   58 00000016 4662            MOVGT            R2, R12
   59 00000018         
   60 00000018 BFC4            ITT              GT          ;REALIZA A TROCA NA
                                                             MEMÓRIA
   61 0000001A 5542            STRBGT           R2, [R0, R5]
   62 0000001C 5503            STRBGT           R3, [R0, R4]
   63 0000001E         
   64 0000001E 2C09            CMP              R4, #9      ;VERIFICA SE JÁ PER
                                                            COREU TODO VETOR
   65 00000020 BF06            ITTE             EQ          ;SE SIM
   66 00000022 1C6D            ADDEQ            R5, R5, #1  ;INCREMENTA O AUX D
                                                            O VALOR A SER OTIMI
                                                            ZADO
   67 00000024 462C            MOVEQ            R4, R5      ;COLOCA O AUX QUE P
                                                            ERCORRE NO VALOR A 
                                                            SER OTIMIZADO
   68 00000026 1C64            ADDNE            R4, R4, #1  ;SE NÃO, INCREMETA 
                                                            O AUX Q PERCORE
   69 00000028         
   70 00000028 2D09            CMP              R5, #9      ;VERIFICA SE JÁ OTI
                                                            MIZOU TODOS OS VALO
                                                            RES
   71 0000002A         
   72 0000002A D000            BEQ              fim         ;SE S, FIM
   73 0000002C         
   74 0000002C D1ED            BNE              loop        ;SE N, CONTINUA
   75 0000002E         
   76 0000002E         fim
   77 0000002E BF00            NOP
   78 00000030                 ALIGN                        ; garante que o fim
                                                             da seção está alin
                                                            hada 
   79 00000030                 END                          ; fim do arquivo



ARM Macro Assembler    Page 3 


              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --depend=.
\objects\exemplo.d -o.\objects\exemplo.o -I.\RTE\_Target_1 -ID:\Keil\ARM\PACK\K
eil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -ID:\Keil\ARM\CMSIS\Include --predefi
ne="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --predefine="TM4C12
94NCPDT SETA 1" --list=.\listings\exemplo.lst exemplo.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 13 in file exemplo.s
   Uses
      None
Comment: DATA unused
vetor 00000000

Symbol: vetor
   Definitions
      At line 15 in file exemplo.s
   Uses
      At line 44 in file exemplo.s
Comment: vetor used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 27 in file exemplo.s
   Uses
      None
Comment: .text unused
Start 00000000

Symbol: Start
   Definitions
      At line 39 in file exemplo.s
   Uses
      At line 30 in file exemplo.s
Comment: Start used once
fim 0000002E

Symbol: fim
   Definitions
      At line 76 in file exemplo.s
   Uses
      At line 72 in file exemplo.s
Comment: fim used once
loop 0000000A

Symbol: loop
   Definitions
      At line 50 in file exemplo.s
   Uses
      At line 74 in file exemplo.s
Comment: loop used once
4 symbols
342 symbols in table
