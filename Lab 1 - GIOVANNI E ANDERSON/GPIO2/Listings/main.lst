


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; Ver 1 19/03/2018
    5 00000000         ; Ver 2 26/08/2018
    6 00000000         ; Este programa deve esperar o usuário pressionar uma ch
                       ave.
    7 00000000         ; Caso o usuário pressione uma chave, um LED deve piscar
                        a cada 1 segundo.
    8 00000000         
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         
   13 00000000         ; Declarações EQU - Defines
   14 00000000         ;<NOME>         EQU <VALOR>
   15 00000000         ; ========================
   16 00000000         ; Definições de Valores
   17 00000000 00000001 
                       BIT0    EQU              2_0001
   18 00000000 00000002 
                       BIT1    EQU              2_0010
   19 00000000         
   20 00000000         ; ------------------------------------------------------
                       -------------------------
   21 00000000         ; Área de Dados - Declarações de variáveis
   22 00000000                 AREA             DATA, ALIGN=2
   23 00000000         ; Se alguma variável for chamada em outro arquivo
   24 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   25 00000000         ; partir de outro arquivo
   26 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   27 00000000         ; de <tam> bytes a partir da primeira 
   28 00000000         ; posição da RAM  
   29 00000000         
   30 00000000         ; ------------------------------------------------------
                       -------------------------
   31 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   32 00000000         ;                  código
   33 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   34 00000000         
   35 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   36 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   37 00000000         ; outro arquivo. No caso startup.s
   38 00000000         
   39 00000000         ; Se chamar alguma função externa 
   40 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   41 00000000         ; função <func>
   42 00000000                 IMPORT           PLL_Init



ARM Macro Assembler    Page 2 


   43 00000000                 IMPORT           SysTick_Init
   44 00000000                 IMPORT           SysTick_Wait1ms
   45 00000000                 IMPORT           GPIO_Init
   46 00000000                 IMPORT           PortA_Output ; Permite chamar P
                                                            ortA_Output de outr
                                                            o arquivo
   47 00000000                 IMPORT           PortB_Output ; Permite chamar P
                                                            ortB_Output de outr
                                                            o arquivo
   48 00000000                 IMPORT           PortP_Output ; Permite chamar P
                                                            ortP_Output de outr
                                                            o arquivo
   49 00000000                 IMPORT           PortQ_Output ; Permite chamar P
                                                            ortQ_Output de outr
                                                            o arquivo   
   50 00000000                 IMPORT           PortJ_Input ; Permite chamar Po
                                                            rtJ_Input de outro 
                                                            arquivo
   51 00000000         
   52 00000000         
   53 00000000         ; ------------------------------------------------------
                       -------------------------
   54 00000000         ; Função main()
   55 00000000         Start
   56 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   57 00000004 F7FF FFFE       BL               SysTick_Init ;Chama a subrotina
                                                             para inicializar o
                                                             SysTick
   58 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   59 0000000C F04F 0400       MOV              R4, #0      ;Flag para os Leds
   60 00000010 F04F 0501       MOV              R5, #1      ;PASSO=1
   61 00000014 F04F 0600       MOV              R6, #0      ;Contador Unidades
   62 00000018 F04F 0700       MOV              R7, #0      ;Contador Dezenas
   63 0000001C F04F 0800       MOV              R8, #0      ;TEMPO
   64 00000020 F04F 0900       MOV              R9, #0      ;Enables
   65 00000024 F04F 0A80       MOV              R10, #2_10000000 ;LED AUX
   66 00000028 F04F 0B80       MOV              R11, #2_10000000 ;LED SAIDA
   67 0000002C         
   68 0000002C         MainLoop
   69 0000002C         
   70 0000002C F7FF FFFE       BL               PortJ_Input
   71 00000030         Nenhuma
   72 00000030 2803            CMP              R0, #2_00000011
   73 00000032 D101            BNE              VerificaSW1
   74 00000034 D007            BEQ              Inicializa
   75 00000036 E7F9            B                MainLoop
   76 00000038         VerificaSW1
   77 00000038 2802            CMP              R0, #2_00000010
   78 0000003A D101            BNE              VerificaSW2
   79 0000003C D011            BEQ              IncrementaPasso
   80 0000003E E7F5            B                MainLoop
   81 00000040         VerificaSW2
   82 00000040 2801            CMP              R0, #2_00000001
   83 00000042 D016            BEQ              DecrementaPasso



ARM Macro Assembler    Page 3 


   84 00000044 E7F2            B                MainLoop
   85 00000046         
   86 00000046         Inicializa
   87 00000046         
   88 00000046 F1B9 0F00       CMP              R9, #0
   89 0000004A D01A            BEQ              EnableDS1
   90 0000004C F1B9 0F01       CMP              R9, #1
   91 00000050 D022            BEQ              EnableDS2
   92 00000052 F1B9 0F02       CMP              R9, #2
   93 00000056 D026            BEQ              EnableLeds
   94 00000058         
   95 00000058 F04F 0900       MOV              R9, #0
   96 0000005C F108 0801       ADD              R8, #1      ;;; Cada inicializa
                                                            ção(atualização dos
                                                             displays) conta um
                                                             T
   97 00000060         
   98 00000060 E7E4            B                MainLoop
   99 00000062         
  100 00000062         IncrementaPasso
  101 00000062 2D09            CMP              R5, #9
  102 00000064 BF18 1C6D       ADDNE            R5, R5, #1
  103 00000068 F04F 0096       MOV              R0, #150
  104 0000006C F7FF FFFE       BL               SysTick_Wait1ms
  105 00000070 E7DC            B                MainLoop
  106 00000072         
  107 00000072         DecrementaPasso
  108 00000072 2D01            CMP              R5, #1
  109 00000074 BF18 1E6D       SUBNE            R5, R5, #1
  110 00000078 F04F 0096       MOV              R0, #150
  111 0000007C F7FF FFFE       BL               SysTick_Wait1ms
  112 00000080 E7D4            B                MainLoop
  113 00000082         
  114 00000082         EnableDS1
  115 00000082 F04F 0901       MOV              R9, #1      ;proximo enable
  116 00000086 F04F 0000       MOV              R0, #2_00000000 ;desliga transi
                                                            stor leds
  117 0000008A F7FF FFFE       BL               PortP_Output
  118 0000008E F04F 0010       MOV              R0, #2_00010000 ;seta transisto
                                                            r PB5
  119 00000092 F7FF FFFE       BL               PortB_Output
  120 00000096 E011            B                DS1
  121 00000098         
  122 00000098         EnableDS2
  123 00000098 F04F 0902       MOV              R9, #2      ;proximo enable
  124 0000009C F04F 0020       MOV              R0, #2_00100000 ;seta transisto
                                                            r PB4
  125 000000A0 F7FF FFFE       BL               PortB_Output
  126 000000A4 E01F            B                DS2
  127 000000A6         
  128 000000A6         EnableLeds
  129 000000A6 F04F 0903       MOV              R9, #3      ;mantem r9 em um va
                                                            lor q não ira mais 
                                                            entrar no loop de i
                                                            nicialização
  130 000000AA F04F 0000       MOV              R0, #2_00000000 ;desliga transi
                                                            stor displays
  131 000000AE F7FF FFFE       BL               PortB_Output
  132 000000B2 F04F 0020       MOV              R0, #2_00100000 ;seta transisto



ARM Macro Assembler    Page 4 


                                                            r PP5
  133 000000B6 F7FF FFFE       BL               PortP_Output
  134 000000BA E029            B                Acende_Led
  135 000000BC         
  136 000000BC         DS1                                  ;Display das dezena
                                                            s(r7)
  137 000000BC 2F00            CMP              R7,#0
  138 000000BE D029            BEQ              ZERO
  139 000000C0 2F01            CMP              R7,#1
  140 000000C2 D02A            BEQ              UM
  141 000000C4 2F02            CMP              R7,#2
  142 000000C6 D02B            BEQ              DOIS
  143 000000C8 2F03            CMP              R7,#3
  144 000000CA D02C            BEQ              TRES
  145 000000CC 2F04            CMP              R7,#4
  146 000000CE D02D            BEQ              QUATRO
  147 000000D0 2F05            CMP              R7,#5
  148 000000D2 D02E            BEQ              CINCO
  149 000000D4 2F06            CMP              R7,#6
  150 000000D6 D02F            BEQ              SEIS
  151 000000D8 2F07            CMP              R7,#7
  152 000000DA D030            BEQ              SETE
  153 000000DC 2F08            CMP              R7,#8
  154 000000DE D031            BEQ              OITO
  155 000000E0 2F09            CMP              R7,#9
  156 000000E2 D032            BEQ              NOVE
  157 000000E4 DC34            BGT              DEZds1      ;Zera ds1, Colocar 
                                                            o valor incrementad
                                                            o corrigido no ds2
  158 000000E6         
  159 000000E6         DS2                                  ;Display das unidad
                                                            es(r6)
  160 000000E6 2E00            CMP              R6,#0
  161 000000E8 D014            BEQ              ZERO
  162 000000EA 2E01            CMP              R6,#1
  163 000000EC D015            BEQ              UM
  164 000000EE 2E02            CMP              R6,#2
  165 000000F0 D016            BEQ              DOIS
  166 000000F2 2E03            CMP              R6,#3
  167 000000F4 D017            BEQ              TRES
  168 000000F6 2E04            CMP              R6,#4
  169 000000F8 D018            BEQ              QUATRO
  170 000000FA 2E05            CMP              R6,#5
  171 000000FC D019            BEQ              CINCO
  172 000000FE 2E06            CMP              R6,#6
  173 00000100 D01A            BEQ              SEIS
  174 00000102 2E07            CMP              R6,#7
  175 00000104 D01B            BEQ              SETE
  176 00000106 2E08            CMP              R6,#8
  177 00000108 D01C            BEQ              OITO
  178 0000010A 2E09            CMP              R6,#9
  179 0000010C D01D            BEQ              NOVE
  180 0000010E DC24            BGT              DEZds2      ;Colocar +1 no ds1 
                                                            quando ds2 > 9
  181 00000110         
  182 00000110         Acende_Led                           ;;Coloca em R0 o bi
                                                            t para aceder os le
                                                            ds desejados
  183 00000110 4658            MOV              R0, R11



ARM Macro Assembler    Page 5 


  184 00000112 E027            B                Saida
  185 00000114         
  186 00000114         ZERO
  187 00000114 F04F 003F       MOV              R0, #2_00111111
  188 00000118 E024            B                Saida
  189 0000011A         UM
  190 0000011A F04F 0006       MOV              R0, #2_00000110
  191 0000011E E021            B                Saida
  192 00000120         DOIS
  193 00000120 F04F 005B       MOV              R0, #2_01011011
  194 00000124 E01E            B                Saida
  195 00000126         TRES
  196 00000126 F04F 004F       MOV              R0, #2_01001111
  197 0000012A E01B            B                Saida
  198 0000012C         QUATRO
  199 0000012C F04F 0066       MOV              R0, #2_01100110
  200 00000130 E018            B                Saida
  201 00000132         CINCO
  202 00000132 F04F 006D       MOV              R0, #2_01101101
  203 00000136 E015            B                Saida
  204 00000138         SEIS
  205 00000138 F04F 007D       MOV              R0, #2_01111101
  206 0000013C E012            B                Saida
  207 0000013E         SETE
  208 0000013E F04F 0007       MOV              R0, #2_00000111
  209 00000142 E00F            B                Saida
  210 00000144         OITO
  211 00000144 F04F 007F       MOV              R0, #2_01111111
  212 00000148 E00C            B                Saida
  213 0000014A         NOVE
  214 0000014A F04F 006F       MOV              R0, #2_01101111
  215 0000014E E009            B                Saida
  216 00000150         DEZds1                               ;;; EX= 98 + 4 = 10
                                                            2 --->> 0 NO R7(DEZ
                                                            ENA) 2 NO R6(UNI) D
                                                            EZds2 faz a correçã
                                                            o pois é chamado ju
                                                            nto
  217 00000150 F04F 0700       MOV              R7,#0       ;;; DZ = 0
  218 00000154 F04F 0900       MOV              R9,#0       ;;;CHAVEA DS1
  219 00000158 E768            B                MainLoop
  220 0000015A         DEZds2
  221 0000015A F1A6 060A       SUB              R6, R6, #10 ;;;EX => R6 = 9 , p
                                                            asso(r5) = 3 , SOma
                                                             = 12, incrementa 1
                                                             no R7(dezena), R6=
                                                            12-10= 2 ;;;;
  222 0000015E F04F 0901       MOV              R9,#1       ;;;CHAVEA DS2
  223 00000162 E016            B                SomaDS1
  224 00000164         
  225 00000164         Saida
  226 00000164 F7FF FFFE       BL               PortA_Output
  227 00000168 F7FF FFFE       BL               PortQ_Output
  228 0000016C F04F 0005       MOV              R0, #5
  229 00000170 F7FF FFFE       BL               SysTick_Wait1ms
  230 00000174 F1B8 0F28       CMP              R8, #40     ;;;;Numero de execu
                                                            çoes do mainloop / 
                                                            tempo pra trocar o 
                                                            numero



ARM Macro Assembler    Page 6 


  231 00000178 D000            BEQ              SomaDS2
  232 0000017A E757            B                MainLoop
  233 0000017C         
  234 0000017C         SomaDS2                              ;;;;Executado a cad
                                                            a T
  235 0000017C F04F 0800       MOV              R8, #0
  236 00000180 442E            ADD              R6, R6, R5
  237 00000182 2C01            CMP              R4, #1      ;;;;Verifica o flag
                                                             de acender(0) ou a
                                                            pagar(1)
  238 00000184 D010            BEQ              VoltaLed
  239 00000186 F1BB 0FFF       CMP              R11, #2_11111111 ;;;;Verifica s
                                                            e acendeu todos os 
                                                            leds
  240 0000018A D105            BNE              ProxLed
  241 0000018C F04F 0A80       MOV              R10, #2_10000000 ;;;;se acendeu
                                                             chama a função q a
                                                            paga
  242 00000190 D00A            BEQ              VoltaLed
  243 00000192         
  244 00000192         SomaDS1
  245 00000192 F107 0701       ADD              R7, #1
  246 00000196 E749            B                MainLoop
  247 00000198         
  248 00000198         ProxLed
  249 00000198 F1BB 0F00       CMP              R11, #2_00000000 ;;;Verifica se
                                                             todos os leds estã
                                                            o apagados
  250 0000019C BF0E            ITEE             EQ
  251 0000019E 44D3            ADDEQ            R11, R11, R10 ;;;Acende o prime
                                                            iro LED
  252 000001A0 EA4F 0A5A       LSRNE            R10, R10 ,#1 ;;;Desloca o Bit d
                                                            o aux >>>
  253 000001A4 44D3            ADDNE            R11, R11, R10 ;;;Soma o Aux com
                                                             o R11 
  254 000001A6 E741            B                MainLoop
  255 000001A8         
  256 000001A8         VoltaLed
  257 000001A8 F04F 0401       MOV              R4, #1      ;;;Seta o flag pra 
                                                            retornar para a fun
                                                            ção de apagar os le
                                                            ds
  258 000001AC EBAB 0B0A       SUB              R11, R11, R10 ;;;Subtrai o de R
                                                            11 o Aux
  259 000001B0 EA4F 0A5A       LSR              R10, R10, #1 ;;;Desloca o aux p
                                                            ara apagar o proxim
                                                            o Led
  260 000001B4 F1BB 0F00       CMP              R11, #2_00000000 ;;;Verifica se
                                                             apagou todos
  261 000001B8 D000            BEQ              rst         ;;;Se sim chama o r
                                                            st para retornar os
                                                             registradores para
                                                             o valor inicial
  262 000001BA E737            B                MainLoop
  263 000001BC         
  264 000001BC         rst
  265 000001BC F04F 0400       MOV              R4, #0
  266 000001C0 F04F 0A80       MOV              R10, #2_10000000
  267 000001C4 F04F 0B00       MOV              R11, #2_00000000



ARM Macro Assembler    Page 7 


  268 000001C8 E730            B                MainLoop
  269 000001CA         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  270 000001CA         ; Fim do Arquivo
  271 000001CA         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  272 000001CA 00 00           ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  273 000001CC                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -IC:\Keil
_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -IC:\Keil_v5\ARM\CMSIS\
Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --
predefine="TM4C1294NCPDT SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 22 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: .text unused
Acende_Led 00000110

Symbol: Acende_Led
   Definitions
      At line 182 in file main.s
   Uses
      At line 134 in file main.s
Comment: Acende_Led used once
CINCO 00000132

Symbol: CINCO
   Definitions
      At line 201 in file main.s
   Uses
      At line 148 in file main.s
      At line 171 in file main.s

DEZds1 00000150

Symbol: DEZds1
   Definitions
      At line 216 in file main.s
   Uses
      At line 157 in file main.s
Comment: DEZds1 used once
DEZds2 0000015A

Symbol: DEZds2
   Definitions
      At line 220 in file main.s
   Uses
      At line 180 in file main.s
Comment: DEZds2 used once
DOIS 00000120

Symbol: DOIS
   Definitions
      At line 192 in file main.s
   Uses
      At line 142 in file main.s
      At line 165 in file main.s

DS1 000000BC

Symbol: DS1
   Definitions
      At line 136 in file main.s
   Uses
      At line 120 in file main.s
Comment: DS1 used once
DS2 000000E6



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: DS2
   Definitions
      At line 159 in file main.s
   Uses
      At line 126 in file main.s
Comment: DS2 used once
DecrementaPasso 00000072

Symbol: DecrementaPasso
   Definitions
      At line 107 in file main.s
   Uses
      At line 83 in file main.s
Comment: DecrementaPasso used once
EnableDS1 00000082

Symbol: EnableDS1
   Definitions
      At line 114 in file main.s
   Uses
      At line 89 in file main.s
Comment: EnableDS1 used once
EnableDS2 00000098

Symbol: EnableDS2
   Definitions
      At line 122 in file main.s
   Uses
      At line 91 in file main.s
Comment: EnableDS2 used once
EnableLeds 000000A6

Symbol: EnableLeds
   Definitions
      At line 128 in file main.s
   Uses
      At line 93 in file main.s
Comment: EnableLeds used once
IncrementaPasso 00000062

Symbol: IncrementaPasso
   Definitions
      At line 100 in file main.s
   Uses
      At line 79 in file main.s
Comment: IncrementaPasso used once
Inicializa 00000046

Symbol: Inicializa
   Definitions
      At line 86 in file main.s
   Uses
      At line 74 in file main.s
Comment: Inicializa used once
MainLoop 0000002C

Symbol: MainLoop
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 68 in file main.s
   Uses
      At line 75 in file main.s
      At line 80 in file main.s
      At line 84 in file main.s
      At line 98 in file main.s
      At line 105 in file main.s
      At line 112 in file main.s
      At line 219 in file main.s
      At line 232 in file main.s
      At line 246 in file main.s
      At line 254 in file main.s
      At line 262 in file main.s
      At line 268 in file main.s

NOVE 0000014A

Symbol: NOVE
   Definitions
      At line 213 in file main.s
   Uses
      At line 156 in file main.s
      At line 179 in file main.s

Nenhuma 00000030

Symbol: Nenhuma
   Definitions
      At line 71 in file main.s
   Uses
      None
Comment: Nenhuma unused
OITO 00000144

Symbol: OITO
   Definitions
      At line 210 in file main.s
   Uses
      At line 154 in file main.s
      At line 177 in file main.s

ProxLed 00000198

Symbol: ProxLed
   Definitions
      At line 248 in file main.s
   Uses
      At line 240 in file main.s
Comment: ProxLed used once
QUATRO 0000012C

Symbol: QUATRO
   Definitions
      At line 198 in file main.s
   Uses
      At line 146 in file main.s
      At line 169 in file main.s

SEIS 00000138



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: SEIS
   Definitions
      At line 204 in file main.s
   Uses
      At line 150 in file main.s
      At line 173 in file main.s

SETE 0000013E

Symbol: SETE
   Definitions
      At line 207 in file main.s
   Uses
      At line 152 in file main.s
      At line 175 in file main.s

Saida 00000164

Symbol: Saida
   Definitions
      At line 225 in file main.s
   Uses
      At line 184 in file main.s
      At line 188 in file main.s
      At line 191 in file main.s
      At line 194 in file main.s
      At line 197 in file main.s
      At line 200 in file main.s
      At line 203 in file main.s
      At line 206 in file main.s
      At line 209 in file main.s
      At line 212 in file main.s
      At line 215 in file main.s

SomaDS1 00000192

Symbol: SomaDS1
   Definitions
      At line 244 in file main.s
   Uses
      At line 223 in file main.s
Comment: SomaDS1 used once
SomaDS2 0000017C

Symbol: SomaDS2
   Definitions
      At line 234 in file main.s
   Uses
      At line 231 in file main.s
Comment: SomaDS2 used once
Start 00000000

Symbol: Start
   Definitions
      At line 55 in file main.s
   Uses
      At line 36 in file main.s
Comment: Start used once



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

TRES 00000126

Symbol: TRES
   Definitions
      At line 195 in file main.s
   Uses
      At line 144 in file main.s
      At line 167 in file main.s

UM 0000011A

Symbol: UM
   Definitions
      At line 189 in file main.s
   Uses
      At line 140 in file main.s
      At line 163 in file main.s

VerificaSW1 00000038

Symbol: VerificaSW1
   Definitions
      At line 76 in file main.s
   Uses
      At line 73 in file main.s
Comment: VerificaSW1 used once
VerificaSW2 00000040

Symbol: VerificaSW2
   Definitions
      At line 81 in file main.s
   Uses
      At line 78 in file main.s
Comment: VerificaSW2 used once
VoltaLed 000001A8

Symbol: VoltaLed
   Definitions
      At line 256 in file main.s
   Uses
      At line 238 in file main.s
      At line 242 in file main.s

ZERO 00000114

Symbol: ZERO
   Definitions
      At line 186 in file main.s
   Uses
      At line 138 in file main.s
      At line 161 in file main.s

rst 000001BC

Symbol: rst
   Definitions
      At line 264 in file main.s
   Uses
      At line 261 in file main.s



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

Comment: rst used once
33 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BIT0 00000001

Symbol: BIT0
   Definitions
      At line 17 in file main.s
   Uses
      None
Comment: BIT0 unused
BIT1 00000002

Symbol: BIT1
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: BIT1 unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 45 in file main.s
   Uses
      At line 58 in file main.s
Comment: GPIO_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 42 in file main.s
   Uses
      At line 56 in file main.s
Comment: PLL_Init used once
PortA_Output 00000000

Symbol: PortA_Output
   Definitions
      At line 46 in file main.s
   Uses
      At line 226 in file main.s
Comment: PortA_Output used once
PortB_Output 00000000

Symbol: PortB_Output
   Definitions
      At line 47 in file main.s
   Uses
      At line 119 in file main.s
      At line 125 in file main.s
      At line 131 in file main.s

PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 50 in file main.s
   Uses
      At line 70 in file main.s
Comment: PortJ_Input used once
PortP_Output 00000000

Symbol: PortP_Output
   Definitions
      At line 48 in file main.s
   Uses
      At line 117 in file main.s
      At line 133 in file main.s

PortQ_Output 00000000

Symbol: PortQ_Output
   Definitions
      At line 49 in file main.s
   Uses
      At line 227 in file main.s
Comment: PortQ_Output used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 43 in file main.s
   Uses
      At line 57 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 44 in file main.s
   Uses
      At line 104 in file main.s
      At line 111 in file main.s
      At line 229 in file main.s

9 symbols
379 symbols in table
