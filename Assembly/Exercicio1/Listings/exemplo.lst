


ARM Macro Assembler    Page 1 


    1 00000000         ; Exemplo.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; 12/03/2018
    5 00000000         
    6 00000000         
    7 00000000         ; ------------------------------------------------------
                       -------------------------
    8 00000000         ; Declarações EQU
    9 00000000         ;<NOME>         EQU <VALOR>
   10 00000000         
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         
   13 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   14 00000000                 THUMB
   15 00000000         
   16 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   17 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   18 00000000         ; outro arquivo. No caso startup.s
   19 00000000         
   20 00000000         ; Se chamar alguma função externa 
   21 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   22 00000000         ; função <func>
   23 00000000         
   24 00000000         ; ------------------------------------------------------
                       --------------------------
   25 00000000         Start
   26 00000000 F04F 0041       MOV              R0, #65     ;Salva no registrad
                                                            or R0 o valor 65 de
                                                            cimal
   27 00000004 F04F 211B       MOV              R1, #0x1B001B00 ;Salva no regis
                                                            trador R1 o valor 0
                                                            x1B001B00
   28 00000008 F245 6278       MOV              R2, #0x5678 ;Salva nos bytes me
                                                            nos significativos 
                                                            0x5678
   29 0000000C F2C1 2234       MOVT             R2, #0x1234 ;Salva nos bytes ma
                                                            is significativos 0
                                                            x1234
   30 00000010         
   31 00000010 4B0B            LDR              R3, =0x20000040 ;Carrega o ende
                                                            reço da memória no 
                                                            R3
   32 00000012 F843 0B04       STR              R0, [R3], #4 ;Salva na memória 
                                                            cujo endereço está 
                                                            em R3 o conteúdo de
                                                             R0.
   33 00000016         ;O endereço é incrementado em 4 bytes
   34 00000016 F843 1B04       STR              R1, [R3], #4 ;Salva na memória 
                                                            cujo endereço está 
                                                            em R3 o conteúdo de
                                                             R1.
   35 0000001A         ;O endereço é incrementado em 4 bytes



ARM Macro Assembler    Page 2 


   36 0000001A F843 2B04       STR              R2, [R3], #4 ;Salva na memória 
                                                            cujo endereço está 
                                                            em R3 o conteúdo de
                                                             R2.
   37 0000001E         ;O endereço é incrementado em 4 bytes
   38 0000001E F04F 0401       MOV              R4, #0x1    ;Salva em R4 nos by
                                                            tes menos significa
                                                            tivos 0x0001
   39 00000022 F2C0 040F       MOVT             R4, #0xF    ;Salva em R4 nos by
                                                            tes mais significat
                                                            ivos 0x000F
   40 00000026 601C            STR              R4, [R3]    ;Salva na memória c
                                                            ujo endereço está e
                                                            m R3 o conteúdo de 
                                                            R4.
   41 00000028         
   42 00000028 F04F 04CD       MOV              R4, #0xCD   ;Salva no registrad
                                                            or R4 o byte 0xCD
   43 0000002C 4B05            LDR              R3, =0x20000046 ;Carrega o ende
                                                            reço de memória no 
                                                            R3
   44 0000002E 701C            STRB             R4, [R3]    ;Salva o BYTE que e
                                                            stá em R4 no endere
                                                            ço de memória de R3
                                                            
   45 00000030         
   46 00000030 4B03            LDR              R3, =0x20000040 ;Carrega o ende
                                                            reço de memória no 
                                                            R3
   47 00000032 F853 7B08       LDR              R7, [R3], #8 ;Carrega o conteúd
                                                            o do endereço apont
                                                            ado por R3 em R7
   48 00000036         ;O endereço é incrementado em 8 bytes
   49 00000036 F8D3 8000       LDR              R8, [R3]    ;Carrega o conteúdo
                                                             do endereço aponta
                                                            do por R3 em R8
   50 0000003A 46B9            MOV              R9, R7      ;Copia o conteúdo d
                                                            o registrador R7 pa
                                                            ra R9
   51 0000003C         
   52 0000003C BF00            NOP
   53 0000003E         
   54 0000003E 00 00           ALIGN                        ; garante que o fim
                                                             da seção está alin
                                                            hada 
   55 00000040                 END                          ; fim do arquivo
              20000040 
              20000046 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\exemplo.d -o.\objects\exemplo.o -I.\RTE\_Target_1 -IC
:\Keil\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -IC:\Keil\ARM\CMSIS\
Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 524" --
predefine="TM4C1294NCPDT SETA 1" --list=.\listings\exemplo.lst exemplo.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 13 in file exemplo.s
   Uses
      None
Comment: .text unused
Start 00000000

Symbol: Start
   Definitions
      At line 25 in file exemplo.s
   Uses
      At line 17 in file exemplo.s
Comment: Start used once
2 symbols
338 symbols in table
