


ARM Macro Assembler    Page 1 


    1 00000000         ; SSR.s
    2 00000000         ; Runs on TM4C1294
    3 00000000         ; Provide functions that initialize a GPIO pin and turn 
                       it on and off.
    4 00000000         ; Use bit-banded I/O.
    5 00000000         ; Daniel Valvano
    6 00000000         ; April 30, 2014
    7 00000000         
    8 00000000         ;  This example accompanies the book
    9 00000000         ;  "Embedded Systems: Introduction to ARM Cortex M Micro
                       controllers"
   10 00000000         ;  ISBN: 978-1469998749, Jonathan Valvano, copyright (c)
                        2014
   11 00000000         ;  Volume 1 Program 4.3, Figure 4.14
   12 00000000         
   13 00000000         ;Copyright 2014 by Jonathan W. Valvano, valvano@mail.ute
                       xas.edu
   14 00000000         ;   You may use, edit, run or distribute this file
   15 00000000         ;   as long as the above copyright notice remains
   16 00000000         ;THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHET
                       HER EXPRESS, IMPLIED
   17 00000000         ;OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WA
                       RRANTIES OF
   18 00000000         ;MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE AP
                       PLY TO THIS SOFTWARE.
   19 00000000         ;VALVANO SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR 
                       SPECIAL, INCIDENTAL,
   20 00000000         ;OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
   21 00000000         ;For more information about my classes, my research, and
                        my books, see
   22 00000000         ;http://users.ece.utexas.edu/~valvano/
   23 00000000         
   24 00000000         ; solid state relay connected to PN1
   25 00000000         
   26 00000000 40064008 
                       GPIO_PORTN1
                               EQU              0x40064008
   27 00000000 40064400 
                       GPIO_PORTN_DIR_R
                               EQU              0x40064400
   28 00000000 40064420 
                       GPIO_PORTN_AFSEL_R
                               EQU              0x40064420
   29 00000000 4006451C 
                       GPIO_PORTN_DEN_R
                               EQU              0x4006451C
   30 00000000 40064528 
                       GPIO_PORTN_AMSEL_R
                               EQU              0x40064528
   31 00000000 4006452C 
                       GPIO_PORTN_PCTL_R
                               EQU              0x4006452C
   32 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   33 00000000 00001000 
                       SYSCTL_RCGCGPIO_R12
                               EQU              0x00001000  ; GPIO Port N Run M
                                                            ode Clock Gating Co



ARM Macro Assembler    Page 2 


                                                            ntrol
   34 00000000 400FEA08 
                       SYSCTL_PRGPIO_R
                               EQU              0x400FEA08
   35 00000000 00001000 
                       SYSCTL_PRGPIO_R12
                               EQU              0x00001000  ; GPIO Port N Perip
                                                            heral Ready
   36 00000000         
   37 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   38 00000000                 THUMB
   39 00000000                 EXPORT           SSR_Init
   40 00000000                 EXPORT           SSR_On
   41 00000000                 EXPORT           SSR_Off
   42 00000000                 EXPORT           SSR_Toggle
   43 00000000         
   44 00000000         ;------------SSR_Init------------
   45 00000000         ; Make PN1 an output, enable digital I/O, ensure alt. fu
                       nctions off.
   46 00000000         ; Input: none
   47 00000000         ; Output: none
   48 00000000         ; Modifies: R0, R1
   49 00000000         SSR_Init
   50 00000000         ; activate clock for Port N
   51 00000000 491A            LDR              R1, =SYSCTL_RCGCGPIO_R ; R1 = S
                                                            YSCTL_RCGCGPIO_R (p
                                                            ointer)
   52 00000002 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
   53 00000004 F440 5080       ORR              R0, R0, #SYSCTL_RCGCGPIO_R12 ; 
                                                            R0 = R0|SYSCTL_RCGC
                                                            GPIO_R12
   54 00000008 6008            STR              R0, [R1]    ; [R1] = R0
   55 0000000A         ; allow time for clock to stabilize
   56 0000000A 4919            LDR              R1, =SYSCTL_PRGPIO_R ; R1 = SYS
                                                            CTL_PRGPIO_R (point
                                                            er)
   57 0000000C         GPIONinitloop
   58 0000000C 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
   59 0000000E F410 5080       ANDS             R0, R0, #SYSCTL_PRGPIO_R12 ; R0
                                                             = R0&SYSCTL_PRGPIO
                                                            _R12
   60 00000012 D0FB            BEQ              GPIONinitloop ; if(R0 == 0), ke
                                                            ep polling
   61 00000014         ; set direction register
   62 00000014 4917            LDR              R1, =GPIO_PORTN_DIR_R ; R1 = GP
                                                            IO_PORTN_DIR_R (poi
                                                            nter)
   63 00000016 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
   64 00000018 F040 0002       ORR              R0, R0, #0x02 ; R0 = R0|0x02 (m
                                                            ake PN1 out (PN1 bu
                                                            ilt-in LED1))
   65 0000001C 6008            STR              R0, [R1]    ; [R1] = R0
   66 0000001E         ; set alternate function register
   67 0000001E 4916            LDR              R1, =GPIO_PORTN_AFSEL_R ; R1 = 
                                                            GPIO_PORTN_AFSEL_R 



ARM Macro Assembler    Page 3 


                                                            (pointer)
   68 00000020 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
   69 00000022 F020 0002       BIC              R0, R0, #0x02 ; R0 = R0&~0x02 (
                                                            disable alt funct o
                                                            n PN1)
   70 00000026 6008            STR              R0, [R1]    ; [R1] = R0
   71 00000028         ; set digital enable register
   72 00000028 4914            LDR              R1, =GPIO_PORTN_DEN_R ; R1 = GP
                                                            IO_PORTN_DEN_R (poi
                                                            nter)
   73 0000002A 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
   74 0000002C F040 0002       ORR              R0, R0, #0x02 ; R0 = R0|0x02 (e
                                                            nable digital I/O o
                                                            n PN1)
   75 00000030 6008            STR              R0, [R1]    ; [R1] = R0
   76 00000032         ; set port control register
   77 00000032 4913            LDR              R1, =GPIO_PORTN_PCTL_R ; R1 = G
                                                            PIO_PORTN_PCTL_R (p
                                                            ointer)
   78 00000034 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
   79 00000036 F020 00F0       BIC              R0, R0, #0x000000F0 ; R0 = R0&0
                                                            xFFFFFF0F (clear bi
                                                            t1 field)
   80 0000003A F100 0000       ADD              R0, R0, #0x00000000 ; R0 = R0+0
                                                            x00000000 (configur
                                                            e PN1 as GPIO)
   81 0000003E 6008            STR              R0, [R1]    ; [R1] = R0
   82 00000040         ; set analog mode select register
   83 00000040 4910            LDR              R1, =GPIO_PORTN_AMSEL_R ; R1 = 
                                                            GPIO_PORTN_AMSEL_R 
                                                            (pointer)
   84 00000042 6808            LDR              R0, [R1]    ; R0 = [R1] (value)
                                                            
   85 00000044 F020 0002       BIC              R0, R0, #0x02 ; R0 = R0&~0x02 (
                                                            disable analog func
                                                            tionality on PN1)
   86 00000048 6008            STR              R0, [R1]    ; [R1] = R0
   87 0000004A 4770            BX               LR
   88 0000004C         
   89 0000004C         ;------------SSR_On------------
   90 0000004C         ; Make PN1 high.
   91 0000004C         ; Input: none
   92 0000004C         ; Output: none
   93 0000004C         ; Modifies: R0, R1
   94 0000004C         SSR_On
   95 0000004C 490E            LDR              R1, =GPIO_PORTN1 ; R1 = GPIO_PO
                                                            RTN1 (pointer)
   96 0000004E F04F 0002       MOV              R0, #0x02   ; R0 = 0x02 (turn o
                                                            n the appliance)
   97 00000052 6008            STR              R0, [R1]    ; [R1] = R0, write 
                                                            to PN1
   98 00000054 4770            BX               LR          ; return
   99 00000056         
  100 00000056         ;------------SSR_Off------------
  101 00000056         ; Make PN1 low.
  102 00000056         ; Input: none



ARM Macro Assembler    Page 4 


  103 00000056         ; Output: none
  104 00000056         ; Modifies: R0, R1
  105 00000056         SSR_Off
  106 00000056 490C            LDR              R1, =GPIO_PORTN1 ; R1 = GPIO_PO
                                                            RTN1 (pointer)
  107 00000058 F04F 0000       MOV              R0, #0x00   ; R0 = 0x00 (turn o
                                                            ff the appliance)
  108 0000005C 6008            STR              R0, [R1]    ; [R1] = R0, write 
                                                            to PN1
  109 0000005E 4770            BX               LR          ; return
  110 00000060         
  111 00000060         ;------------SSR_Toggle------------
  112 00000060         ; Toggle PN1.
  113 00000060         ; Input: none
  114 00000060         ; Output: none
  115 00000060         ; Modifies: R0, R1
  116 00000060         SSR_Toggle
  117 00000060 4909            LDR              R1, =GPIO_PORTN1 ; R1 = GPIO_PO
                                                            RTN1 (pointer)
  118 00000062 6808            LDR              R0, [R1]    ; R0 = [R1] (previo
                                                            us value)
  119 00000064 F080 0002       EOR              R0, R0, #0x02 ; flip bit 1
  120 00000068 6008            STR              R0, [R1]    ; affect just PN1
  121 0000006A 4770            BX               LR
  122 0000006C         
  123 0000006C                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  124 0000006C                 END                          ; end of file
              400FE608 
              400FEA08 
              40064400 
              40064420 
              4006451C 
              4006452C 
              40064528 
              40064008 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\ssr.d -o.\objects\ssr.o -I.\RTE\_Target_1 -IC:\Keil\A
RM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -IC:\Keil\ARM\CMSIS\Include 
--predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 524" --predefin
e="TM4C1294NCPDT SETA 1" --list=.\listings\ssr.lst SSR.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 37 in file SSR.s
   Uses
      None
Comment: .text unused
GPIONinitloop 0000000C

Symbol: GPIONinitloop
   Definitions
      At line 57 in file SSR.s
   Uses
      At line 60 in file SSR.s
Comment: GPIONinitloop used once
SSR_Init 00000000

Symbol: SSR_Init
   Definitions
      At line 49 in file SSR.s
   Uses
      At line 39 in file SSR.s
Comment: SSR_Init used once
SSR_Off 00000056

Symbol: SSR_Off
   Definitions
      At line 105 in file SSR.s
   Uses
      At line 41 in file SSR.s
Comment: SSR_Off used once
SSR_On 0000004C

Symbol: SSR_On
   Definitions
      At line 94 in file SSR.s
   Uses
      At line 40 in file SSR.s
Comment: SSR_On used once
SSR_Toggle 00000060

Symbol: SSR_Toggle
   Definitions
      At line 116 in file SSR.s
   Uses
      At line 42 in file SSR.s
Comment: SSR_Toggle used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTN1 40064008

Symbol: GPIO_PORTN1
   Definitions
      At line 26 in file SSR.s
   Uses
      At line 95 in file SSR.s
      At line 106 in file SSR.s
      At line 117 in file SSR.s

GPIO_PORTN_AFSEL_R 40064420

Symbol: GPIO_PORTN_AFSEL_R
   Definitions
      At line 28 in file SSR.s
   Uses
      At line 67 in file SSR.s
Comment: GPIO_PORTN_AFSEL_R used once
GPIO_PORTN_AMSEL_R 40064528

Symbol: GPIO_PORTN_AMSEL_R
   Definitions
      At line 30 in file SSR.s
   Uses
      At line 83 in file SSR.s
Comment: GPIO_PORTN_AMSEL_R used once
GPIO_PORTN_DEN_R 4006451C

Symbol: GPIO_PORTN_DEN_R
   Definitions
      At line 29 in file SSR.s
   Uses
      At line 72 in file SSR.s
Comment: GPIO_PORTN_DEN_R used once
GPIO_PORTN_DIR_R 40064400

Symbol: GPIO_PORTN_DIR_R
   Definitions
      At line 27 in file SSR.s
   Uses
      At line 62 in file SSR.s
Comment: GPIO_PORTN_DIR_R used once
GPIO_PORTN_PCTL_R 4006452C

Symbol: GPIO_PORTN_PCTL_R
   Definitions
      At line 31 in file SSR.s
   Uses
      At line 77 in file SSR.s
Comment: GPIO_PORTN_PCTL_R used once
SYSCTL_PRGPIO_R 400FEA08

Symbol: SYSCTL_PRGPIO_R
   Definitions
      At line 34 in file SSR.s
   Uses
      At line 56 in file SSR.s
Comment: SYSCTL_PRGPIO_R used once
SYSCTL_PRGPIO_R12 00001000



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: SYSCTL_PRGPIO_R12
   Definitions
      At line 35 in file SSR.s
   Uses
      At line 59 in file SSR.s
Comment: SYSCTL_PRGPIO_R12 used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 32 in file SSR.s
   Uses
      At line 51 in file SSR.s
Comment: SYSCTL_RCGCGPIO_R used once
SYSCTL_RCGCGPIO_R12 00001000

Symbol: SYSCTL_RCGCGPIO_R12
   Definitions
      At line 33 in file SSR.s
   Uses
      At line 53 in file SSR.s
Comment: SYSCTL_RCGCGPIO_R12 used once
10 symbols
352 symbols in table
