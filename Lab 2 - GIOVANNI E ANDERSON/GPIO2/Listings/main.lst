


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         
    5 00000000         ; ------------------------------------------------------
                       -------------------------
    6 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    7 00000000         ; ------------------------------------------------------
                       -------------------------
    8 00000000         
    9 00000000         ; Declarações EQU - Defines
   10 00000000         ;<NOME>         EQU <VALOR>
   11 00000000         ; ========================
   12 00000000         ; Definições de Valores
   13 00000000 00000001 
                       BIT0    EQU              2_00000001
   14 00000000 00000002 
                       BIT1    EQU              2_00000010
   15 00000000 00000004 
                       BIT2    EQU              2_00000100
   16 00000000 00000008 
                       BIT3    EQU              2_00001000
   17 00000000 00000010 
                       BIT4    EQU              2_00010000
   18 00000000 00000020 
                       BIT5    EQU              2_00100000
   19 00000000 00000040 
                       BIT6    EQU              2_01000000
   20 00000000 00000080 
                       BIT7    EQU              2_10000000
   21 00000000         
   22 00000000         ; ------------------------------------------------------
                       -------------------------
   23 00000000         ; Área de Dados - Declarações de variáveis
   24 00000000                 AREA             DATA, ALIGN=2
   25 00000000         ; Se alguma variável for chamada em outro arquivo
   26 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   27 00000000         ; partir de outro arquivo
   28 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   29 00000000         ; de <tam> bytes a partir da primeira 
   30 00000000         ; posição da RAM
   31 00000000 00 00 00 
              00 00 00 
              00 00    senha   SPACE            8
   32 00000008         
   33 00000008         ; ------------------------------------------------------
                       -------------------------
   34 00000008         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   35 00000008         ;                  código
   36 00000008                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   37 00000000         
   38 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   39 00000000                 EXPORT           Start       ; Permite chamar a 



ARM Macro Assembler    Page 2 


                                                            função Start a part
                                                            ir de 
   40 00000000         ; outro arquivo. No caso startup.s
   41 00000000         
   42 00000000         ; Se chamar alguma função externa 
   43 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   44 00000000         ; função <func>
   45 00000000                 IMPORT           PLL_Init
   46 00000000                 IMPORT           SysTick_Init
   47 00000000                 IMPORT           SysTick_Wait1ms
   48 00000000                 IMPORT           SysTick_Wait1us
   49 00000000                 IMPORT           GPIO_Init
   50 00000000                 IMPORT           PortA_Output ; Permite chamar P
                                                            ortA_Output de outr
                                                            o arquivo
   51 00000000                 IMPORT           PortB_Output ; Permite chamar P
                                                            ortB_Output de outr
                                                            o arquivo
   52 00000000                 IMPORT           PortP_Output ; Permite chamar P
                                                            ortP_Output de outr
                                                            o arquivo
   53 00000000                 IMPORT           PortQ_Output ; Permite chamar P
                                                            ortQ_Output de outr
                                                            o arquivo
   54 00000000                 IMPORT           PortK_Output ; Permite chamar P
                                                            ortK_Output de outr
                                                            o arquivo
   55 00000000                 IMPORT           PortM_Output ; Permite chamar P
                                                            ortM_Output de outr
                                                            o arquivo 
   56 00000000                 IMPORT           PortN_Output ; Permite chamar P
                                                            ortM_Output de outr
                                                            o arquivo
   57 00000000                 IMPORT           PortJ_Input ; Permite chamar Po
                                                            rtJ_Input de outro 
                                                            arquivo
   58 00000000                 IMPORT           PortL_Input ; Permite chamar Po
                                                            rtL_Input de outro 
                                                            arquivo
   59 00000000         ;IMPORTA AS FUNÇOES DO LCD
   60 00000000                 IMPORT           LCD_Inst
   61 00000000                 IMPORT           LCD_Dado
   62 00000000                 IMPORT           LCD_rst
   63 00000000                 IMPORT           LCDlinha_2
   64 00000000                 IMPORT           LCD_escreve
   65 00000000                 IMPORT           LCD_Init
   66 00000000         
   67 00000000         
   68 00000000         ; ------------------------------------------------------
                       -------------------------
   69 00000000         ; Função main()
   70 00000000         Start
   71 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   72 00000004 F7FF FFFE       BL               SysTick_Init ;Chama a subrotina
                                                             para inicializar o



ARM Macro Assembler    Page 3 


                                                             SysTick
   73 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 
                                                            que inicializa os G
                                                            PIO
   74 0000000C F7FF FFFE       BL               LCD_Init    ;Chama a subrotina 
                                                            para inicializar o 
                                                            LCD
   75 00000010         ;R3 - PARA INSTRUÇOES / DADOS
   76 00000010         ;R4 - STRINGS
   77 00000010 F04F 0501       MOV              R5, #1      ;R5 - FLAGs/Passos/
                                                             1-PEDE SENHA / 2-C
                                                            ADASTRA SENHA / 3-T
                                                            RANCANDO / 4-TRANCA
                                                            DO / 5e6 - TRAVADO 
                                                            SENHA MESTRA
   78 00000014 F44F 767A       MOV              R6, #1000   ;R6 - Puxa valor do
                                                             teclado
   79 00000018 F04F 0700       MOV              R7, #0      ;R7 - Contador de a
                                                            lgarismos digitados
                                                             / Percorre a memór
                                                            ia
   80 0000001C F8DF 8054       LDR              R8,= senha  ;R8 - Primeira posi
                                                            ção na memória
   81 00000020 F04F 39FF       MOV              R9, #-1     ;R9 - Recebe valor 
                                                            da memória e compar
                                                            a com a senha digit
                                                            ada
   82 00000024 F04F 0A00       MOV              R10, #0     ;R10 - Contador de 
                                                            Digitos certos
   83 00000028 F04F 0B00       MOV              R11, #0     ;R11 - Contador de 
                                                            erros
   84 0000002C F888 9000       STRB             R9, [R8]
   85 00000030 F04F 0C02       MOV              R12, #2     ;R12 - 1º Digito se
                                                            nha mestra
   86 00000034 F888 C005       STRB             R12, [R8, #5]
   87 00000038 F04F 0C00       MOV              R12, #0     ;R12 - 2º Digito se
                                                            nha mestra
   88 0000003C F888 C006       STRB             R12, [R8, #6]
   89 00000040 F04F 0C01       MOV              R12, #1     ;R12 - 3º Digito se
                                                            nha mestra
   90 00000044 F888 C007       STRB             R12, [R8, #7]
   91 00000048 F04F 0C09       MOV              R12, #9     ;R12 - 4º Digito se
                                                            nha mestra
   92 0000004C F888 C008       STRB             R12, [R8, #8]
   93 00000050 F04F 0C00       MOV              R12, #0     ;R12 - FAZ TUDO
   94 00000054 E093            B                MainLoop
   95 00000056         
   96 00000056         ABRIR                                ;Função que vai res
                                                            etar todos os flags
                                                             e Abrir o cofre
   97 00000056 F04F 0501       MOV              R5, #1
   98 0000005A F44F 767A       MOV              R6, #1000
   99 0000005E F04F 0700       MOV              R7, #0
  100 00000062 F04F 0A00       MOV              R10, #0
  101 00000066 F04F 0B00       MOV              R11, #0
  102 0000006A F04F 0C00       MOV              R12, #0
  103 0000006E F7FF FFFE       BL               LCD_rst
  104 00000072 4C01            LDR              R4, =abrindo
  105 00000074 00000000 



ARM Macro Assembler    Page 4 


              00000000         LTORG
  106 0000007C F7FF FFFE       BL               LCD_escreve
  107 00000080 F241 3088       MOV              R0, #5000
  108 00000084 F7FF FFFE       BL               SysTick_Wait1ms
  109 00000088 E079            B                MainLoop
  110 0000008A         
  111 0000008A         Destravar                            ;Função q ira destr
                                                            avar o cofre com a 
                                                            senha mestra
  112 0000008A F04F 0C00       MOV              R12, #0
  113 0000008E F04F 0000       MOV              R0, #2_00000000 ;desliga transi
                                                            stor displays
  114 00000092 F7FF FFFE       BL               PortB_Output
  115 00000096 F04F 0020       MOV              R0, #2_00100000 ;seta transisto
                                                            r PP5
  116 0000009A F7FF FFFE       BL               PortP_Output
  117 0000009E         loop6
  118 0000009E F04F 00FF       MOV              R0, #2_11111111 ;pisca leds 5s
  119 000000A2 F7FF FFFE       BL               PortA_Output
  120 000000A6 F7FF FFFE       BL               PortQ_Output
  121 000000AA F04F 0064       MOV              R0, #100
  122 000000AE F7FF FFFE       BL               SysTick_Wait1ms
  123 000000B2 F04F 0000       MOV              R0, #2_00000000
  124 000000B6 F7FF FFFE       BL               PortA_Output
  125 000000BA F7FF FFFE       BL               PortQ_Output
  126 000000BE F04F 0064       MOV              R0, #100
  127 000000C2 F7FF FFFE       BL               SysTick_Wait1ms
  128 000000C6 F10C 0C01       ADD              R12, R12, #1
  129 000000CA F1BC 0F19       CMP              R12, #25
  130 000000CE D1E6            BNE              loop6
  131 000000D0 E7C1            B                ABRIR
  132 000000D2         
  133 000000D2         Trancado                             ;Função q verifica 
                                                            a senha enquanto o 
                                                            cofre permanece tra
                                                            ncado
  134 000000D2 F7FF FFFE       BL               LCDlinha_2
  135 000000D6 4CFD            LDR              R4, =limpa
  136 000000D8 F7FF FFFE       BL               LCD_escreve
  137 000000DC F7FF FFFE       BL               LCDlinha_2
  138 000000E0 F04F 0A00       MOV              R10, #0     ;Reseta R10
  139 000000E4 F04F 0700       MOV              R7, #0      ;Reseta R10
  140 000000E8 F44F 767A       MOV              R6, #1000   ;Reseta R10
  141 000000EC         loop1
  142 000000EC F000 F8FA       BL               Teclado     ;recebe do teclado
  143 000000F0 F818 9007       LDRB             R9, [R8, R7] ;LE senha cadastra
                                                            da na memoria
  144 000000F4 454E            CMP              R6, R9      ;Compara com digito
                                                             recebido
  145 000000F6 BF08 F10A 
              0A01             ADDEQ            R10, R10, #1 ;Se o digito esta 
                                                            correto add 1 em R1
                                                            0
  146 000000FC F04F 39FF       MOV              R9, #-1     ;joga os valores de
                                                             r9 e R6 para qualq
                                                            uer valor apenas pa
                                                            ra n contar mais de
                                                             uma vez o digito c
                                                            orreto



ARM Macro Assembler    Page 5 


  147 00000100 F44F 767A       MOV              R6, #1000
  148 00000104 F1BA 0F04       CMP              R10, #4     ;Se R10 for 4 signi
                                                            fica q os 4 digitos
                                                             estão corretos
  149 00000108 D0A5            BEQ              ABRIR       ;abre
  150 0000010A 2F04            CMP              R7, #4      ;4 digitos recebido
                                                            s - senha errada
  151 0000010C D000            BEQ              erro        ;Caso erre a senha
  152 0000010E E7ED            B                loop1
  153 00000110         
  154 00000110         erro                                 ;Função q indica se
                                                            nha errada e conta 
                                                            quantos erros ocorr
                                                            eram
  155 00000110 F7FF FFFE       BL               LCD_rst
  156 00000114 4CEE            LDR              R4, =errou
  157 00000116 F7FF FFFE       BL               LCD_escreve
  158 0000011A F240 50DC       MOV              R0, #1500
  159 0000011E F7FF FFFE       BL               SysTick_Wait1ms
  160 00000122 F1BB 0F03       CMP              R11, #3
  161 00000126 BF18 F10B 
              0B01             ADDNE            R11, R11, #1
  162 0000012C F1BB 0F03       CMP              R11, #3     ;Se errar 3 vezes T
                                                            RAVA
  163 00000130 D002            BEQ              Travou
  164 00000132 F04F 0700       MOV              R7, #0
  165 00000136 E7CC            B                Trancado
  166 00000138         
  167 00000138         Travou                               ;COFRE TRAVADO
  168 00000138 F04F 0506       MOV              R5, #6
  169 0000013C         loop4
  170 0000013C F44F 767A       MOV              R6, #1000   ;garante q o regist
                                                            rador n tenha valor
                                                            es q interfiram
  171 00000140 F04F 0704       MOV              R7, #4      ;conta a partir da 
                                                            senha cadastrada, p
                                                            ois é onde a senha 
                                                            mestra esta salva
  172 00000144 F04F 0A00       MOV              R10, #0     ;zera o contador de
                                                             digitos certos
  173 00000148 F7FF FFFE       BL               LCD_rst
  174 0000014C 4CE1            LDR              R4, =travado
  175 0000014E F7FF FFFE       BL               LCD_escreve
  176 00000152         loop5                                ;LOOP INFINITO ATÉ 
                                                            RECEBER O FLAG DA I
                                                            NTERRUPÇÃO
  177 00000152 2D05            CMP              R5, #5
  178 00000154 D1FD            BNE              loop5
  179 00000156 F7FF FFFE       BL               LCDlinha_2
  180 0000015A         loop2
  181 0000015A F000 F8C3       BL               Teclado
  182 0000015E F818 9007       LDRB             R9, [R8, R7] ;LE senha cadastra
                                                            da na memoria
  183 00000162 454E            CMP              R6, R9      ;Compara com digito
                                                             recebido
  184 00000164 BF08 F10A 
              0A01             ADDEQ            R10, R10, #1 ;Se o digito esta 
                                                            correto add 1 em R1
                                                            0



ARM Macro Assembler    Page 6 


  185 0000016A F04F 39FF       MOV              R9, #-1     ;joga os valores de
                                                             r9 e R6 para qualq
                                                            uer valor apenas pa
                                                            ra n contar mais de
                                                             uma vez o digito c
                                                            orreto
  186 0000016E F44F 767A       MOV              R6, #1000
  187 00000172 F1BA 0F04       CMP              R10, #4     ;Se R10 for 4 signi
                                                            fica q os 4 digitos
                                                             estão corretos
  188 00000176 D088            BEQ              Destravar   ;SE CORRETO DESTRAV
                                                            A
  189 00000178 2F08            CMP              R7, #8      ;4 digitos recebido
                                                            s - senha errada
  190 0000017A D0DF            BEQ              loop4       ;reseta os flags e 
                                                            PERMANECE VERIFICAN
                                                            DO DE 4 EM 4 DIGITO
                                                            S
  191 0000017C E7ED            B                loop2       ;PERMANECE VERIFICA
                                                            NDO
  192 0000017E         
  193 0000017E         MainLoop                             ;CHAMA AS FUNÇOES C
                                                            ONFORME O FLAG DE R
                                                            5
  194 0000017E 2D04            CMP              R5, #4
  195 00000180 D0A7            BEQ              Trancado    ;se o cofre ja está
                                                             trancado
  196 00000182 2D01            CMP              R5, #1
  197 00000184 D03A            BEQ              PedeSenha   ;inicialização pede
                                                             senha para cadastr
                                                            o
  198 00000186 2D02            CMP              R5, #2
  199 00000188 D020            BEQ              CadastrarSenha ;cadastar nova s
                                                            enha
  200 0000018A 2D03            CMP              R5, #3
  201 0000018C D000            BEQ              Trancar     ;tranca
  202 0000018E E7F6            B                MainLoop
  203 00000190         
  204 00000190         Trancar                              ;Função q represent
                                                            a o processo de fec
                                                            hamento e seta o R5
                                                             para TRANCADO
  205 00000190 F44F 707A       MOV              R0, #1000
  206 00000194 F7FF FFFE       BL               SysTick_Wait1ms
  207 00000198 F7FF FFFE       BL               LCD_rst
  208 0000019C 4CCE            LDR              R4, =trancando
  209 0000019E F7FF FFFE       BL               LCD_escreve
  210 000001A2 F241 3088       MOV              R0, #5000
  211 000001A6 F7FF FFFE       BL               SysTick_Wait1ms
  212 000001AA F7FF FFFE       BL               LCD_rst
  213 000001AE 4CCB            LDR              R4, =trancado
  214 000001B0 F7FF FFFE       BL               LCD_escreve
  215 000001B4 F7FF FFFE       BL               LCDlinha_2
  216 000001B8 4CC9            LDR              R4, =digite
  217 000001BA F7FF FFFE       BL               LCD_escreve
  218 000001BE F44F 707A       MOV              R0, #1000
  219 000001C2 F7FF FFFE       BL               SysTick_Wait1ms
  220 000001C6 F04F 0504       MOV              R5, #4      ;SETA o R5 em TRANC
                                                            ADO



ARM Macro Assembler    Page 7 


  221 000001CA E7D8            B                MainLoop
  222 000001CC         
  223 000001CC         CadastrarSenha                       ;Função q cadastar 
                                                            senha e seta o R5 p
                                                            ara TRANCANDO
  224 000001CC F000 F88A       BL               Teclado     ;Recebe valor do te
                                                            clado
  225 000001D0 F1BC 0F63       CMP              R12, #99    ;flag aux que só é 
                                                            setado quando ja fo
                                                            ram digitados 4 dig
                                                            itos
  226 000001D4 D00F            BEQ              loop3
  227 000001D6 F808 6007       STRB             R6, [R8, R7] 
                                                            ;escreve na memória
                                                            
  228 000001DA 2F04            CMP              R7, #4      ;verifica 4 digitos
                                                            
  229 000001DC DBF6            BLT              CadastrarSenha
  230 000001DE F7FF FFFE       BL               LCD_rst
  231 000001E2 4CC0            LDR              R4, =confirma1 ;Pede a confirma
                                                            ção #
  232 000001E4 F7FF FFFE       BL               LCD_escreve
  233 000001E8 F7FF FFFE       BL               LCDlinha_2
  234 000001EC 4CBE            LDR              R4, =confirma2
  235 000001EE F7FF FFFE       BL               LCD_escreve
  236 000001F2 F04F 0C63       MOV              R12, #99    ;Seta o flag aux
  237 000001F6         loop3
  238 000001F6 2D03            CMP              R5, #3      ;Verifica a confirm
                                                            ação
  239 000001F8 D1E8            BNE              CadastrarSenha
  240 000001FA E7C0            B                MainLoop
  241 000001FC         
  242 000001FC         PedeSenha                            ;Função q represent
                                                            a o processo de ped
                                                            ir a senha e seta o
                                                             R5 para CADASTRAME
                                                            NTO
  243 000001FC F7FF FFFE       BL               LCD_rst
  244 00000200 4CBA            LDR              R4, =pedeSenha1
  245 00000202 F7FF FFFE       BL               LCD_escreve
  246 00000206 F7FF FFFE       BL               LCDlinha_2
  247 0000020A 4CB9            LDR              R4, =pedeSenha2
  248 0000020C F7FF FFFE       BL               LCD_escreve
  249 00000210 F44F 70FA       MOV              R0, #500
  250 00000214 F7FF FFFE       BL               SysTick_Wait1ms
  251 00000218 F7FF FFFE       BL               LCDlinha_2
  252 0000021C 4CB5            LDR              R4, =pedeSenha3
  253 0000021E F7FF FFFE       BL               LCD_escreve
  254 00000222 F44F 70FA       MOV              R0, #500
  255 00000226 F7FF FFFE       BL               SysTick_Wait1ms
  256 0000022A F7FF FFFE       BL               LCDlinha_2
  257 0000022E 4CB2            LDR              R4, =pedeSenha4
  258 00000230 F7FF FFFE       BL               LCD_escreve
  259 00000234 F44F 70FA       MOV              R0, #500
  260 00000238 F7FF FFFE       BL               SysTick_Wait1ms
  261 0000023C F7FF FFFE       BL               LCDlinha_2
  262 00000240 4CA2            LDR              R4, =limpa
  263 00000242 F7FF FFFE       BL               LCD_escreve
  264 00000246 F7FF FFFE       BL               LCDlinha_2



ARM Macro Assembler    Page 8 


  265 0000024A F04F 0502       MOV              R5, #2
  266 0000024E E796            B                MainLoop
  267 00000250         
  268 00000250         NUM_Hash                             ;Função q irá será 
                                                            o R5 Para TRANCANDO
                                                             caso ja tenham sid
                                                            o inseridos 4 digit
                                                            os
  269 00000250 B500            PUSH             {LR}
  270 00000252 2F04            CMP              R7, #4
  271 00000254 BF28 2503       MOVHS            R5, #3
  272 00000258 F000 F8C0       BL               TIMER       ;tira repique
  273 0000025C F85D EB04       POP              {LR}
  274 00000260 4770            BX               LR
  275 00000262         NUM_Ast
  276 00000262 B500            PUSH             {LR}
  277 00000264 F04F 060A       MOV              R6, #10
  278 00000268 4CA4            LDR              R4, =numAst
  279 0000026A F7FF FFFE       BL               LCD_escreve
  280 0000026E F000 F8B5       BL               TIMER
  281 00000272 F107 0701       ADD              R7, R7, #1
  282 00000276 F85D EB04       POP              {LR}
  283 0000027A 4770            BX               LR
  284 0000027C         NUM_0
  285 0000027C B500            PUSH             {LR}
  286 0000027E F04F 0600       MOV              R6, #0
  287 00000282 4C9E            LDR              R4, =numAst
  288 00000284 F7FF FFFE       BL               LCD_escreve
  289 00000288 F000 F8A8       BL               TIMER
  290 0000028C F107 0701       ADD              R7, R7, #1
  291 00000290 F85D EB04       POP              {LR}
  292 00000294 4770            BX               LR
  293 00000296         NUM_1
  294 00000296 B500            PUSH             {LR}
  295 00000298 F04F 0601       MOV              R6, #1
  296 0000029C 4C97            LDR              R4, =numAst
  297 0000029E F7FF FFFE       BL               LCD_escreve
  298 000002A2 F000 F89B       BL               TIMER
  299 000002A6 F107 0701       ADD              R7, R7, #1
  300 000002AA F85D EB04       POP              {LR}
  301 000002AE 4770            BX               LR
  302 000002B0         NUM_2
  303 000002B0 B500            PUSH             {LR}
  304 000002B2 F04F 0602       MOV              R6, #2
  305 000002B6 4C91            LDR              R4, =numAst
  306 000002B8 F7FF FFFE       BL               LCD_escreve
  307 000002BC F000 F88E       BL               TIMER
  308 000002C0 F107 0701       ADD              R7, R7, #1
  309 000002C4 F85D EB04       POP              {LR}
  310 000002C8 4770            BX               LR
  311 000002CA         NUM_3
  312 000002CA B500            PUSH             {LR}
  313 000002CC F04F 0603       MOV              R6, #3
  314 000002D0 4C8A            LDR              R4, =numAst
  315 000002D2 F7FF FFFE       BL               LCD_escreve
  316 000002D6 F000 F881       BL               TIMER
  317 000002DA F107 0701       ADD              R7, R7, #1
  318 000002DE F85D EB04       POP              {LR}
  319 000002E2 4770            BX               LR



ARM Macro Assembler    Page 9 


  320 000002E4         
  321 000002E4         Teclado                              ;FUNÇÃO Q MAPEIA O 
                                                            TECLADO
  322 000002E4 B500            PUSH             {LR}
  323 000002E6 F04F 00E0       MOV              R0, #2_11100000
  324 000002EA F7FF FFFE       BL               PortM_Output
  325 000002EE F7FF FFFE       BL               PortL_Input
  326 000002F2 280E            CMP              R0, #2_1110 ;número 1
  327 000002F4 D0CF            BEQ              NUM_1
  328 000002F6 280D            CMP              R0, #2_1101 ;número 4
  329 000002F8 D022            BEQ              NUM_4
  330 000002FA 280B            CMP              R0, #2_1011 ;número 7
  331 000002FC D047            BEQ              NUM_7
  332 000002FE 2807            CMP              R0, #2_0111 ;número *
  333 00000300 D0AF            BEQ              NUM_Ast
  334 00000302         
  335 00000302 F04F 00D0       MOV              R0, #2_11010000
  336 00000306 F7FF FFFE       BL               PortM_Output
  337 0000030A F7FF FFFE       BL               PortL_Input
  338 0000030E 280E            CMP              R0, #2_1110 ;número 2
  339 00000310 D0CE            BEQ              NUM_2
  340 00000312 280D            CMP              R0, #2_1101 ;número 5
  341 00000314 D021            BEQ              NUM_5
  342 00000316 280B            CMP              R0, #2_1011 ;número 8
  343 00000318 D046            BEQ              NUM_8
  344 0000031A 2807            CMP              R0, #2_0111 ;número 0
  345 0000031C D0AE            BEQ              NUM_0
  346 0000031E         
  347 0000031E F04F 00B0       MOV              R0, #2_10110000
  348 00000322 F7FF FFFE       BL               PortM_Output
  349 00000326 F7FF FFFE       BL               PortL_Input
  350 0000032A 280E            CMP              R0, #2_1110 ;número 3
  351 0000032C D0CD            BEQ              NUM_3
  352 0000032E 280D            CMP              R0, #2_1101 ;número 6
  353 00000330 D020            BEQ              NUM_6
  354 00000332 280B            CMP              R0, #2_1011 ;número 9
  355 00000334 D045            BEQ              NUM_9
  356 00000336 2807            CMP              R0, #2_0111 ;número #
  357 00000338 D08A            BEQ              NUM_Hash
  358 0000033A F85D EB04       POP              {LR}
  359 0000033E 4770            BX               LR
  360 00000340         
  361 00000340         NUM_4
  362 00000340 B500            PUSH             {LR}
  363 00000342 F04F 0604       MOV              R6, #4
  364 00000346 4C6D            LDR              R4, =numAst
  365 00000348 F7FF FFFE       BL               LCD_escreve
  366 0000034C F000 F846       BL               TIMER
  367 00000350 F107 0701       ADD              R7, R7, #1
  368 00000354 F85D EB04       POP              {LR}
  369 00000358 4770            BX               LR
  370 0000035A         NUM_5
  371 0000035A B500            PUSH             {LR}
  372 0000035C F04F 0605       MOV              R6, #5
  373 00000360 4C66            LDR              R4, =numAst
  374 00000362 F7FF FFFE       BL               LCD_escreve
  375 00000366 F000 F839       BL               TIMER
  376 0000036A F107 0701       ADD              R7, R7, #1
  377 0000036E F85D EB04       POP              {LR}



ARM Macro Assembler    Page 10 


  378 00000372 4770            BX               LR
  379 00000374         NUM_6
  380 00000374 B500            PUSH             {LR}
  381 00000376 F04F 0606       MOV              R6, #6
  382 0000037A 4C60            LDR              R4, =numAst
  383 0000037C F7FF FFFE       BL               LCD_escreve
  384 00000380 F000 F82C       BL               TIMER
  385 00000384 F107 0701       ADD              R7, R7, #1
  386 00000388 F85D EB04       POP              {LR}
  387 0000038C 4770            BX               LR
  388 0000038E         NUM_7
  389 0000038E B500            PUSH             {LR}
  390 00000390 F04F 0607       MOV              R6, #7
  391 00000394 4C59            LDR              R4, =numAst
  392 00000396 F7FF FFFE       BL               LCD_escreve
  393 0000039A F000 F81F       BL               TIMER
  394 0000039E F107 0701       ADD              R7, R7, #1
  395 000003A2 F85D EB04       POP              {LR}
  396 000003A6 4770            BX               LR
  397 000003A8         NUM_8
  398 000003A8 B500            PUSH             {LR}
  399 000003AA F04F 0608       MOV              R6, #8
  400 000003AE 4C53            LDR              R4, =numAst
  401 000003B0 F7FF FFFE       BL               LCD_escreve
  402 000003B4 F000 F812       BL               TIMER
  403 000003B8 F107 0701       ADD              R7, R7, #1
  404 000003BC F85D EB04       POP              {LR}
  405 000003C0 4770            BX               LR
  406 000003C2         NUM_9
  407 000003C2 B500            PUSH             {LR}
  408 000003C4 F04F 0609       MOV              R6, #9
  409 000003C8 4C4C            LDR              R4, =numAst
  410 000003CA F7FF FFFE       BL               LCD_escreve
  411 000003CE F000 F805       BL               TIMER
  412 000003D2 F107 0701       ADD              R7, R7, #1
  413 000003D6 F85D EB04       POP              {LR}
  414 000003DA 4770            BX               LR
  415 000003DC         
  416 000003DC         TIMER                                ;tira repique
  417 000003DC B500            PUSH             {LR}
  418 000003DE F44F 7096       MOV              R0, #300
  419 000003E2 F7FF FFFE       BL               SysTick_Wait1ms
  420 000003E6 F85D EB04       POP              {LR}
  421 000003EA 4770            BX               LR
  422 000003EC         
  423 000003EC         ;STRINGS
  424 000003EC 41 62 72 
              69 6E 64 
              6F 20 20 
              20 20 20 
              20 20 20 
              20 00    abrindo DCB              "Abrindo         ",0
  425 000003FD 43 6F 66 
              72 65 20 
              61 62 65 
              72 74 6F 
              20 20 20 
              20 00    pedeSenha1
                               DCB              "Cofre aberto    ",0



ARM Macro Assembler    Page 11 


  426 0000040E 44 69 67 
              69 74 65 
              20 6E 6F 
              76 61 20 
              20 20 20 
              20 00    pedeSenha2
                               DCB              "Digite nova     ",0
  427 0000041F 73 65 6E 
              68 61 20 
              70 61 72 
              61 20 20 
              20 20 20 
              20 00    pedeSenha3
                               DCB              "senha para      ",0
  428 00000430 66 65 63 
              68 61 72 
              20 6F 20 
              63 6F 66 
              72 65 20 
              20 00    pedeSenha4
                               DCB              "fechar o cofre  ",0
  429 00000441 20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 00    limpa   DCB              "                ",0
  430 00000452 2A 00   numAst  DCB              "*",0
  431 00000454 50 72 65 
              73 73 69 
              6F 6E 65 
              20 23 20 
              70 61 72 
              61 00    confirma1
                               DCB              "Pressione # para",0
  432 00000465 43 6F 6E 
              66 69 72 
              6D 61 72 
              20 20 20 
              20 20 20 
              20 00    confirma2
                               DCB              "Confirmar       ",0
  433 00000476 43 6F 66 
              72 65 20 
              66 65 63 
              68 61 6E 
              64 6F 20 
              20 00    trancando
                               DCB              "Cofre fechando  ",0
  434 00000487 43 6F 66 
              72 65 20 
              46 65 63 
              68 61 64 
              6F 20 20 
              20 00    trancado
                               DCB              "Cofre Fechado   ",0
  435 00000498 45 52 52 
              4F 2D 54 
              65 6E 74 



ARM Macro Assembler    Page 12 


              65 44 65 
              4E 6F 76 
              6F 00    errou   DCB              "ERRO-TenteDeNovo",0
  436 000004A9 45 52 52 
              2D 53 45 
              4E 48 41 
              20 4D 45 
              53 54 52 
              41 00    travado DCB              "ERR-SENHA MESTRA",0
  437 000004BA 44 69 67 
              69 74 65 
              20 61 20 
              53 65 6E 
              68 61 20 
              20 00    digite  DCB              "Digite a Senha  ",0
  438 000004CB         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  439 000004CB         ; Fim do Arquivo
  440 000004CB         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  441 000004CB 00              ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  442 000004CC                 END                          ;Fim do arquivo
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -ID:\Keil
\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -ID:\Keil\ARM\CMSIS\Includ
e --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --predef
ine="TM4C1294NCPDT SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 24 in file main.s
   Uses
      None
Comment: DATA unused
senha 00000000

Symbol: senha
   Definitions
      At line 31 in file main.s
   Uses
      At line 80 in file main.s
Comment: senha used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 36 in file main.s
   Uses
      None
Comment: .text unused
ABRIR 00000056

Symbol: ABRIR
   Definitions
      At line 96 in file main.s
   Uses
      At line 131 in file main.s
      At line 149 in file main.s

CadastrarSenha 000001CC

Symbol: CadastrarSenha
   Definitions
      At line 223 in file main.s
   Uses
      At line 199 in file main.s
      At line 229 in file main.s
      At line 239 in file main.s

Destravar 0000008A

Symbol: Destravar
   Definitions
      At line 111 in file main.s
   Uses
      At line 188 in file main.s
Comment: Destravar used once
MainLoop 0000017E

Symbol: MainLoop
   Definitions
      At line 193 in file main.s
   Uses
      At line 94 in file main.s
      At line 109 in file main.s
      At line 202 in file main.s
      At line 221 in file main.s
      At line 240 in file main.s
      At line 266 in file main.s

NUM_0 0000027C

Symbol: NUM_0
   Definitions
      At line 284 in file main.s
   Uses
      At line 345 in file main.s
Comment: NUM_0 used once
NUM_1 00000296

Symbol: NUM_1



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 293 in file main.s
   Uses
      At line 327 in file main.s
Comment: NUM_1 used once
NUM_2 000002B0

Symbol: NUM_2
   Definitions
      At line 302 in file main.s
   Uses
      At line 339 in file main.s
Comment: NUM_2 used once
NUM_3 000002CA

Symbol: NUM_3
   Definitions
      At line 311 in file main.s
   Uses
      At line 351 in file main.s
Comment: NUM_3 used once
NUM_4 00000340

Symbol: NUM_4
   Definitions
      At line 361 in file main.s
   Uses
      At line 329 in file main.s
Comment: NUM_4 used once
NUM_5 0000035A

Symbol: NUM_5
   Definitions
      At line 370 in file main.s
   Uses
      At line 341 in file main.s
Comment: NUM_5 used once
NUM_6 00000374

Symbol: NUM_6
   Definitions
      At line 379 in file main.s
   Uses
      At line 353 in file main.s
Comment: NUM_6 used once
NUM_7 0000038E

Symbol: NUM_7
   Definitions
      At line 388 in file main.s
   Uses
      At line 331 in file main.s
Comment: NUM_7 used once
NUM_8 000003A8

Symbol: NUM_8
   Definitions
      At line 397 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 343 in file main.s
Comment: NUM_8 used once
NUM_9 000003C2

Symbol: NUM_9
   Definitions
      At line 406 in file main.s
   Uses
      At line 355 in file main.s
Comment: NUM_9 used once
NUM_Ast 00000262

Symbol: NUM_Ast
   Definitions
      At line 275 in file main.s
   Uses
      At line 333 in file main.s
Comment: NUM_Ast used once
NUM_Hash 00000250

Symbol: NUM_Hash
   Definitions
      At line 268 in file main.s
   Uses
      At line 357 in file main.s
Comment: NUM_Hash used once
PedeSenha 000001FC

Symbol: PedeSenha
   Definitions
      At line 242 in file main.s
   Uses
      At line 197 in file main.s
Comment: PedeSenha used once
Start 00000000

Symbol: Start
   Definitions
      At line 70 in file main.s
   Uses
      At line 39 in file main.s
Comment: Start used once
TIMER 000003DC

Symbol: TIMER
   Definitions
      At line 416 in file main.s
   Uses
      At line 272 in file main.s
      At line 280 in file main.s
      At line 289 in file main.s
      At line 298 in file main.s
      At line 307 in file main.s
      At line 316 in file main.s
      At line 366 in file main.s
      At line 375 in file main.s
      At line 384 in file main.s
      At line 393 in file main.s
      At line 402 in file main.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 411 in file main.s

Teclado 000002E4

Symbol: Teclado
   Definitions
      At line 321 in file main.s
   Uses
      At line 142 in file main.s
      At line 181 in file main.s
      At line 224 in file main.s

Trancado 000000D2

Symbol: Trancado
   Definitions
      At line 133 in file main.s
   Uses
      At line 165 in file main.s
      At line 195 in file main.s

Trancar 00000190

Symbol: Trancar
   Definitions
      At line 204 in file main.s
   Uses
      At line 201 in file main.s
Comment: Trancar used once
Travou 00000138

Symbol: Travou
   Definitions
      At line 167 in file main.s
   Uses
      At line 163 in file main.s
Comment: Travou used once
abrindo 000003EC

Symbol: abrindo
   Definitions
      At line 424 in file main.s
   Uses
      At line 104 in file main.s
Comment: abrindo used once
confirma1 00000454

Symbol: confirma1
   Definitions
      At line 431 in file main.s
   Uses
      At line 231 in file main.s
Comment: confirma1 used once
confirma2 00000465

Symbol: confirma2
   Definitions
      At line 432 in file main.s
   Uses



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 234 in file main.s
Comment: confirma2 used once
digite 000004BA

Symbol: digite
   Definitions
      At line 437 in file main.s
   Uses
      At line 216 in file main.s
Comment: digite used once
erro 00000110

Symbol: erro
   Definitions
      At line 154 in file main.s
   Uses
      At line 151 in file main.s
Comment: erro used once
errou 00000498

Symbol: errou
   Definitions
      At line 435 in file main.s
   Uses
      At line 156 in file main.s
Comment: errou used once
limpa 00000441

Symbol: limpa
   Definitions
      At line 429 in file main.s
   Uses
      At line 135 in file main.s
      At line 262 in file main.s

loop1 000000EC

Symbol: loop1
   Definitions
      At line 141 in file main.s
   Uses
      At line 152 in file main.s
Comment: loop1 used once
loop2 0000015A

Symbol: loop2
   Definitions
      At line 180 in file main.s
   Uses
      At line 191 in file main.s
Comment: loop2 used once
loop3 000001F6

Symbol: loop3
   Definitions
      At line 237 in file main.s
   Uses
      At line 226 in file main.s
Comment: loop3 used once



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

loop4 0000013C

Symbol: loop4
   Definitions
      At line 169 in file main.s
   Uses
      At line 190 in file main.s
Comment: loop4 used once
loop5 00000152

Symbol: loop5
   Definitions
      At line 176 in file main.s
   Uses
      At line 178 in file main.s
Comment: loop5 used once
loop6 0000009E

Symbol: loop6
   Definitions
      At line 117 in file main.s
   Uses
      At line 130 in file main.s
Comment: loop6 used once
numAst 00000452

Symbol: numAst
   Definitions
      At line 430 in file main.s
   Uses
      At line 278 in file main.s
      At line 287 in file main.s
      At line 296 in file main.s
      At line 305 in file main.s
      At line 314 in file main.s
      At line 364 in file main.s
      At line 373 in file main.s
      At line 382 in file main.s
      At line 391 in file main.s
      At line 400 in file main.s
      At line 409 in file main.s

pedeSenha1 000003FD

Symbol: pedeSenha1
   Definitions
      At line 425 in file main.s
   Uses
      At line 244 in file main.s
Comment: pedeSenha1 used once
pedeSenha2 0000040E

Symbol: pedeSenha2
   Definitions
      At line 426 in file main.s
   Uses
      At line 247 in file main.s
Comment: pedeSenha2 used once
pedeSenha3 0000041F



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols


Symbol: pedeSenha3
   Definitions
      At line 427 in file main.s
   Uses
      At line 252 in file main.s
Comment: pedeSenha3 used once
pedeSenha4 00000430

Symbol: pedeSenha4
   Definitions
      At line 428 in file main.s
   Uses
      At line 257 in file main.s
Comment: pedeSenha4 used once
trancado 00000487

Symbol: trancado
   Definitions
      At line 434 in file main.s
   Uses
      At line 213 in file main.s
Comment: trancado used once
trancando 00000476

Symbol: trancando
   Definitions
      At line 433 in file main.s
   Uses
      At line 208 in file main.s
Comment: trancando used once
travado 000004A9

Symbol: travado
   Definitions
      At line 436 in file main.s
   Uses
      At line 174 in file main.s
Comment: travado used once
45 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BIT0 00000001

Symbol: BIT0
   Definitions
      At line 13 in file main.s
   Uses
      None
Comment: BIT0 unused
BIT1 00000002

Symbol: BIT1
   Definitions
      At line 14 in file main.s
   Uses
      None
Comment: BIT1 unused
BIT2 00000004

Symbol: BIT2
   Definitions
      At line 15 in file main.s
   Uses
      None
Comment: BIT2 unused
BIT3 00000008

Symbol: BIT3
   Definitions
      At line 16 in file main.s
   Uses
      None
Comment: BIT3 unused
BIT4 00000010

Symbol: BIT4
   Definitions
      At line 17 in file main.s
   Uses
      None
Comment: BIT4 unused
BIT5 00000020

Symbol: BIT5
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: BIT5 unused
BIT6 00000040

Symbol: BIT6
   Definitions
      At line 19 in file main.s
   Uses
      None
Comment: BIT6 unused
BIT7 00000080

Symbol: BIT7



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 20 in file main.s
   Uses
      None
Comment: BIT7 unused
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 49 in file main.s
   Uses
      At line 73 in file main.s
Comment: GPIO_Init used once
LCD_Dado 00000000

Symbol: LCD_Dado
   Definitions
      At line 61 in file main.s
   Uses
      None
Comment: LCD_Dado unused
LCD_Init 00000000

Symbol: LCD_Init
   Definitions
      At line 65 in file main.s
   Uses
      At line 74 in file main.s
Comment: LCD_Init used once
LCD_Inst 00000000

Symbol: LCD_Inst
   Definitions
      At line 60 in file main.s
   Uses
      None
Comment: LCD_Inst unused
LCD_escreve 00000000

Symbol: LCD_escreve
   Definitions
      At line 64 in file main.s
   Uses
      At line 106 in file main.s
      At line 136 in file main.s
      At line 157 in file main.s
      At line 175 in file main.s
      At line 209 in file main.s
      At line 214 in file main.s
      At line 217 in file main.s
      At line 232 in file main.s
      At line 235 in file main.s
      At line 245 in file main.s
      At line 248 in file main.s
      At line 253 in file main.s
      At line 258 in file main.s
      At line 263 in file main.s
      At line 279 in file main.s
      At line 288 in file main.s
      At line 297 in file main.s
      At line 306 in file main.s
      At line 315 in file main.s
      At line 365 in file main.s
      At line 374 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 383 in file main.s
      At line 392 in file main.s
      At line 401 in file main.s
      At line 410 in file main.s

LCD_rst 00000000

Symbol: LCD_rst
   Definitions
      At line 62 in file main.s
   Uses
      At line 103 in file main.s
      At line 155 in file main.s
      At line 173 in file main.s
      At line 207 in file main.s
      At line 212 in file main.s
      At line 230 in file main.s
      At line 243 in file main.s

LCDlinha_2 00000000

Symbol: LCDlinha_2
   Definitions
      At line 63 in file main.s
   Uses
      At line 134 in file main.s
      At line 137 in file main.s
      At line 179 in file main.s
      At line 215 in file main.s
      At line 233 in file main.s
      At line 246 in file main.s
      At line 251 in file main.s
      At line 256 in file main.s
      At line 261 in file main.s
      At line 264 in file main.s

PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 45 in file main.s
   Uses
      At line 71 in file main.s
Comment: PLL_Init used once
PortA_Output 00000000

Symbol: PortA_Output
   Definitions
      At line 50 in file main.s
   Uses
      At line 119 in file main.s
      At line 124 in file main.s

PortB_Output 00000000

Symbol: PortB_Output
   Definitions
      At line 51 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

      At line 114 in file main.s
Comment: PortB_Output used once
PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 57 in file main.s
   Uses
      None
Comment: PortJ_Input unused
PortK_Output 00000000

Symbol: PortK_Output
   Definitions
      At line 54 in file main.s
   Uses
      None
Comment: PortK_Output unused
PortL_Input 00000000

Symbol: PortL_Input
   Definitions
      At line 58 in file main.s
   Uses
      At line 325 in file main.s
      At line 337 in file main.s
      At line 349 in file main.s

PortM_Output 00000000

Symbol: PortM_Output
   Definitions
      At line 55 in file main.s
   Uses
      At line 324 in file main.s
      At line 336 in file main.s
      At line 348 in file main.s

PortN_Output 00000000

Symbol: PortN_Output
   Definitions
      At line 56 in file main.s
   Uses
      None
Comment: PortN_Output unused
PortP_Output 00000000

Symbol: PortP_Output
   Definitions
      At line 52 in file main.s
   Uses
      At line 116 in file main.s
Comment: PortP_Output used once
PortQ_Output 00000000

Symbol: PortQ_Output
   Definitions
      At line 53 in file main.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
External symbols

   Uses
      At line 120 in file main.s
      At line 125 in file main.s

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 46 in file main.s
   Uses
      At line 72 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 47 in file main.s
   Uses
      At line 108 in file main.s
      At line 122 in file main.s
      At line 127 in file main.s
      At line 159 in file main.s
      At line 206 in file main.s
      At line 211 in file main.s
      At line 219 in file main.s
      At line 250 in file main.s
      At line 255 in file main.s
      At line 260 in file main.s
      At line 419 in file main.s

SysTick_Wait1us 00000000

Symbol: SysTick_Wait1us
   Definitions
      At line 48 in file main.s
   Uses
      None
Comment: SysTick_Wait1us unused
20 symbols
413 symbols in table
