


ARM Macro Assembler    Page 1 


    1 00000000         ; gpio.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; Ver 1 19/03/2018
    5 00000000         ; Ver 2 26/08/2018
    6 00000000         
    7 00000000         ; ------------------------------------------------------
                       -------------------------
    8 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000         ; Declarações EQU - Defines
   11 00000000         ; ========================
   12 00000000         ; Definições de Valores
   13 00000000 00000001 
                       BIT0    EQU              2_0001
   14 00000000 00000002 
                       BIT1    EQU              2_0010
   15 00000000         ; ========================
   16 00000000         ; Definições dos Registradores Gerais
   17 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   18 00000000 400FEA08 
                       SYSCTL_PRGPIO_R
                               EQU              0x400FEA08
   19 00000000         ; ========================
   20 00000000         ; Definições dos Ports
   21 00000000         ; PORT J
   22 00000000 40060520 
                       GPIO_PORTJ_AHB_LOCK_R
                               EQU              0x40060520
   23 00000000 40060524 
                       GPIO_PORTJ_AHB_CR_R
                               EQU              0x40060524
   24 00000000 40060528 
                       GPIO_PORTJ_AHB_AMSEL_R
                               EQU              0x40060528
   25 00000000 4006052C 
                       GPIO_PORTJ_AHB_PCTL_R
                               EQU              0x4006052C
   26 00000000 40060400 
                       GPIO_PORTJ_AHB_DIR_R
                               EQU              0x40060400
   27 00000000 40060420 
                       GPIO_PORTJ_AHB_AFSEL_R
                               EQU              0x40060420
   28 00000000 4006051C 
                       GPIO_PORTJ_AHB_DEN_R
                               EQU              0x4006051C
   29 00000000 40060510 
                       GPIO_PORTJ_AHB_PUR_R
                               EQU              0x40060510
   30 00000000 400603FC 
                       GPIO_PORTJ_AHB_DATA_R
                               EQU              0x400603FC
   31 00000000 40060404 
                       GPIO_PORTJ_AHB_IS_R



ARM Macro Assembler    Page 2 


                               EQU              0x40060404
   32 00000000 40060408 
                       GPIO_PORTJ_AHB_IBE_R
                               EQU              0x40060408
   33 00000000 4006040C 
                       GPIO_PORTJ_AHB_IEV_R
                               EQU              0x4006040C
   34 00000000 40060414 
                       GPIO_PORTJ_AHB_RIS_R
                               EQU              0x40060414
   35 00000000 40060418 
                       GPIO_PORTJ_AHB_MIS_R
                               EQU              0x40060418
   36 00000000 40060410 
                       GPIO_PORTJ_AHB_IM_R
                               EQU              0x40060410
   37 00000000 4006041C 
                       GPIO_PORTJ_AHB_ICR_R
                               EQU              0x4006041C
   38 00000000 E000E430 
                       NVIC_PRI12_R
                               EQU              0xE000E430
   39 00000000 E000E184 
                       NVIC_DIS1_R
                               EQU              0xE000E184
   40 00000000 E000E104 
                       NVIC_EN1_R
                               EQU              0xE000E104
   41 00000000 00000100 
                       GPIO_PORTJ
                               EQU              2_000000100000000
   42 00000000         ; PORT N
   43 00000000 40064520 
                       GPIO_PORTN_AHB_LOCK_R
                               EQU              0x40064520
   44 00000000 40064524 
                       GPIO_PORTN_AHB_CR_R
                               EQU              0x40064524
   45 00000000 40064528 
                       GPIO_PORTN_AHB_AMSEL_R
                               EQU              0x40064528
   46 00000000 4006452C 
                       GPIO_PORTN_AHB_PCTL_R
                               EQU              0x4006452C
   47 00000000 40064400 
                       GPIO_PORTN_AHB_DIR_R
                               EQU              0x40064400
   48 00000000 40064420 
                       GPIO_PORTN_AHB_AFSEL_R
                               EQU              0x40064420
   49 00000000 4006451C 
                       GPIO_PORTN_AHB_DEN_R
                               EQU              0x4006451C
   50 00000000 40064510 
                       GPIO_PORTN_AHB_PUR_R
                               EQU              0x40064510
   51 00000000 400643FC 
                       GPIO_PORTN_AHB_DATA_R
                               EQU              0x400643FC



ARM Macro Assembler    Page 3 


   52 00000000 00001000 
                       GPIO_PORTN
                               EQU              2_001000000000000
   53 00000000         
   54 00000000         
   55 00000000         ; ------------------------------------------------------
                       -------------------------
   56 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   57 00000000         ;                  código
   58 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   59 00000000         
   60 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   61 00000000                 EXPORT           GPIO_Init   ; Permite chamar GP
                                                            IO_Init de outro ar
                                                            quivo
   62 00000000                 EXPORT           PortN_Output ; Permite chamar P
                                                            ortN_Output de outr
                                                            o arquivo
   63 00000000                 EXPORT           PortJ_Input ; Permite chamar Po
                                                            rtJ_Input de outro 
                                                            arquivo
   64 00000000                 IMPORT           EnableInterrupts
   65 00000000                 EXPORT           GPIOPortJ_Handler
   66 00000000         
   67 00000000         
   68 00000000         ;-------------------------------------------------------
                       -------------------------
   69 00000000         ; Função GPIO_Init
   70 00000000         ; Parâmetro de entrada: Não tem
   71 00000000         ; Parâmetro de saída: Não tem
   72 00000000         GPIO_Init
   73 00000000         ;=====================
   74 00000000         ; 1. Ativar o clock para a porta setando o bit correspon
                       dente no registrador RCGCGPIO,
   75 00000000         ; após isso verificar no PRGPIO se a porta está pronta p
                       ara uso.
   76 00000000         ; enable clock to GPIOF at clock gating register
   77 00000000 483C            LDR              R0, =SYSCTL_RCGCGPIO_R ;Carrega
                                                             o endereço do regi
                                                            strador RCGCGPIO
   78 00000002 F44F 5180       MOV              R1, #GPIO_PORTN ;Seta o bit da 
                                                            porta N
   79 00000006 F441 7180       ORR              R1, #GPIO_PORTJ ;Seta o bit da 
                                                            porta J, fazendo co
                                                            m OR
   80 0000000A 6001            STR              R1, [R0]    ;Move para a memóri
                                                            a os bits das porta
                                                            s no endereço do RC
                                                            GCGPIO
   81 0000000C         
   82 0000000C 483A            LDR              R0, =SYSCTL_PRGPIO_R ;Carrega o
                                                             endereço do PRGPIO
                                                             para esperar os GP
                                                            IO ficarem prontos
   83 0000000E 6801    EsperaGPIO
                               LDR              R1, [R0]    ;Lê da memória o co



ARM Macro Assembler    Page 4 


                                                            nteúdo do endereço 
                                                            do registrador
   84 00000010 F44F 5280       MOV              R2, #GPIO_PORTN ;Seta os bits c
                                                            orrespondentes às p
                                                            ortas para fazer a 
                                                            comparação
   85 00000014 F442 7280       ORR              R2, #GPIO_PORTJ ;Seta o bit da 
                                                            porta J, fazendo co
                                                            m OR
   86 00000018 4211            TST              R1, R2      ;ANDS de R1 com R2
   87 0000001A D0F8            BEQ              EsperaGPIO  ;Se o flag Z=1, vol
                                                            ta para o laço. Sen
                                                            ão continua executa
                                                            ndo
   88 0000001C         
   89 0000001C         ; 2. Limpar o AMSEL para desabilitar a analógica
   90 0000001C F04F 0100       MOV              R1, #0x00   ;Colocar 0 no regis
                                                            trador para desabil
                                                            itar a função analó
                                                            gica
   91 00000020 4836            LDR              R0, =GPIO_PORTJ_AHB_AMSEL_R ;Ca
                                                            rrega o R0 com o en
                                                            dereço do AMSEL par
                                                            a a porta J
   92 00000022 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor AMSEL da porta 
                                                            J da memória
   93 00000024 4836            LDR              R0, =GPIO_PORTN_AHB_AMSEL_R ;Ca
                                                            rrega o R0 com o en
                                                            dereço do AMSEL par
                                                            a a porta N
   94 00000026 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor AMSEL da porta 
                                                            N da memória
   95 00000028         
   96 00000028         ; 3. Limpar PCTL para selecionar o GPIO
   97 00000028 F04F 0100       MOV              R1, #0x00   ;Colocar 0 no regis
                                                            trador para selecio
                                                            nar o modo GPIO
   98 0000002C 4835            LDR              R0, =GPIO_PORTJ_AHB_PCTL_R ;Car
                                                            rega o R0 com o end
                                                            ereço do PCTL para 
                                                            a porta J
   99 0000002E 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor PCTL da porta J
                                                             da memória
  100 00000030 4835            LDR              R0, =GPIO_PORTN_AHB_PCTL_R ;Car
                                                            rega o R0 com o end
                                                            ereço do PCTL para 
                                                            a porta N
  101 00000032 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor PCTL da porta N
                                                             da memória
  102 00000034         ; 4. DIR para 0 se for entrada, 1 se for saída
  103 00000034 4835            LDR              R0, =GPIO_PORTN_AHB_DIR_R ;Carr
                                                            ega o R0 com o ende
                                                            reço do DIR para a 
                                                            porta N
  104 00000036 F04F 0101       MOV              R1, #BIT0   ;PN1 & PN0 para LED



ARM Macro Assembler    Page 5 


                                                            
  105 0000003A F041 0102       ORR              R1, #BIT1   ;Enviar o valor 0x0
                                                            3 para habilitar os
                                                             pinos como saída
  106 0000003E 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor
  107 00000040         ; O certo era verificar os outros bits da PJ para não tr
                       ansformar entradas em saídas desnecessárias
  108 00000040 4833            LDR              R0, =GPIO_PORTJ_AHB_DIR_R ;Carr
                                                            ega o R0 com o ende
                                                            reço do DIR para a 
                                                            porta J
  109 00000042 F04F 0100       MOV              R1, #0x00   ;Colocar 0 no regis
                                                            trador DIR para fun
                                                            cionar com saída
  110 00000046 6001            STR              R1, [R0]    ;Guarda no registra
                                                            dor PCTL da porta J
                                                             da memória
  111 00000048         ; 5. Limpar os bits AFSEL para 0 para selecionar GPIO 
  112 00000048         ;    Sem função alternativa
  113 00000048 F04F 0100       MOV              R1, #0x00   ;Colocar o valor 0 
                                                            para não setar funç
                                                            ão alternativa
  114 0000004C 4831            LDR              R0, =GPIO_PORTN_AHB_AFSEL_R ;Ca
                                                            rrega o endereço do
                                                             AFSEL da porta N
  115 0000004E 6001            STR              R1, [R0]    ;Escreve na porta
  116 00000050 4831            LDR              R0, =GPIO_PORTJ_AHB_AFSEL_R ;Ca
                                                            rrega o endereço do
                                                             AFSEL da porta J
  117 00000052 6001            STR              R1, [R0]    ;Escreve na porta
  118 00000054         ; 6. Setar os bits de DEN para habilitar I/O digital
  119 00000054 4831            LDR              R0, =GPIO_PORTN_AHB_DEN_R ;Carr
                                                            ega o endereço do D
                                                            EN
  120 00000056 6801            LDR              R1, [R0]    ;Ler da memória o r
                                                            egistrador GPIO_POR
                                                            TN_AHB_DEN_R
  121 00000058 F04F 0201       MOV              R2, #BIT0
  122 0000005C F042 0202       ORR              R2, #BIT1   ;Habilitar funciona
                                                            lidade digital na D
                                                            EN os bits 0 e 1
  123 00000060 EA41 0102       ORR              R1, R2
  124 00000064 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador da memória fun
                                                            cionalidade digital
                                                             
  125 00000066         
  126 00000066 482E            LDR              R0, =GPIO_PORTJ_AHB_DEN_R ;Carr
                                                            ega o endereço do D
                                                            EN
  127 00000068 6801            LDR              R1, [R0]    ;Ler da memória o r
                                                            egistrador GPIO_POR
                                                            TN_AHB_DEN_R
  128 0000006A F04F 0201       MOV              R2, #BIT0
  129 0000006E F042 0202       ORR              R2, #BIT1   ;Habilitar funciona
                                                            lidade digital na D
                                                            EN os bits 0 e 1
  130 00000072 EA41 0102       ORR              R1, R2



ARM Macro Assembler    Page 6 


  131 00000076 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador da memória fun
                                                            cionalidade digital
                                                            
  132 00000078         
  133 00000078         ; 7. Para habilitar resistor de pull-up interno, setar P
                       UR para 1
  134 00000078 482A            LDR              R0, =GPIO_PORTJ_AHB_PUR_R ;Carr
                                                            ega o endereço do P
                                                            UR para a porta J
  135 0000007A F04F 0101       MOV              R1, #BIT0   ;Habilitar funciona
                                                            lidade digital de r
                                                            esistor de pull-up 
                                                            
  136 0000007E F041 0102       ORR              R1, #BIT1   ;nos bits 0 e 1
  137 00000082 6001            STR              R1, [R0]    ;Escreve no registr
                                                            ador da memória do 
                                                            resistor de pull-up
                                                            
  138 00000084         
  139 00000084         
  140 00000084 4928            LDR              R1, =GPIO_PORTJ_AHB_IM_R ;Desab
                                                            ilita A INT NA PORT
                                                            A J0
  141 00000086 F04F 0000       MOV              R0, #0x00
  142 0000008A 6008            STR              R0, [R1]
  143 0000008C         
  144 0000008C F04F 0100       MOV              R1, #0x00
  145 00000090 4826            LDR              R0, =GPIO_PORTJ_AHB_IS_R 
                                                            ;0 para BORDA
  146 00000092 6001            STR              R1, [R0]
  147 00000094 F04F 0100       MOV              R1, #0x00
  148 00000098 4825            LDR              R0, =GPIO_PORTJ_AHB_IBE_R 
                                                            ;0 para BORDA UNICA
                                                            
  149 0000009A 6001            STR              R1, [R0]
  150 0000009C F04F 0100       MOV              R1, #0x00
  151 000000A0 4824            LDR              R0, =GPIO_PORTJ_AHB_IEV_R ;0 pa
                                                            ra BORDA DE DESCIDA
                                                            
  152 000000A2 6001            STR              R1, [R0]
  153 000000A4         
  154 000000A4 4924            LDR              R1, =GPIO_PORTJ_AHB_ICR_R ;SETA
                                                             A INT NA PORTA J0
  155 000000A6 F04F 0001       MOV              R0, #0x01   ;
  156 000000AA 6008            STR              R0, [R1]
  157 000000AC         
  158 000000AC 491E            LDR              R1, =GPIO_PORTJ_AHB_IM_R ;HABIL
                                                            ITA A INT NA PORTA 
                                                            J0
  159 000000AE F04F 0001       MOV              R0, #0x00000001 ;
  160 000000B2 6008            STR              R0, [R1]
  161 000000B4 4921            LDR              R1, =NVIC_PRI12_R 
                                                            ;SETA PRIORIDADE
  162 000000B6 F04F 4020       MOV              R0, #0xA0000000
  163 000000BA 6008            STR              R0, [R1]
  164 000000BC 4920            LDR              R1, =NVIC_EN1_R ;HABILITA INTER
                                                            RUPÇÃO
  165 000000BE F44F 2000       MOV              R0, #0x80000



ARM Macro Assembler    Page 7 


  166 000000C2 6008            STR              R0, [R1]
  167 000000C4         
  168 000000C4 B500            PUSH             {LR}
  169 000000C6 F7FF FFFE       BL               EnableInterrupts ;LIGA CHAVE DA
                                                            S INTERRUPÇOES
  170 000000CA F85D EB04       POP              {LR}
  171 000000CE 4770            BX               LR
  172 000000D0         ; ------------------------------------------------------
                       -------------------------
  173 000000D0         ; Função PortN_Output
  174 000000D0         ; Parâmetro de entrada: 
  175 000000D0         ; Parâmetro de saída: Não tem
  176 000000D0         PortN_Output
  177 000000D0         ; ****************************************
  178 000000D0 491C            LDR              R1, =GPIO_PORTN_AHB_DATA_R ;Car
                                                            rega o valor do off
                                                            set do data registe
                                                            r
  179 000000D2         ;Read-Modify-Write para escrita
  180 000000D2 680A            LDR              R2, [R1]
  181 000000D4 F022 0203       BIC              R2, #2_00000011 ;Primeiro limpa
                                                            mos os dois bits do
                                                             lido da porta R2 =
                                                             R2 & 11111100
  182 000000D8 EA40 0002       ORR              R0, R0, R2  ;Fazer o OR do lido
                                                             pela porta com o p
                                                            arâmetro de entrada
                                                            
  183 000000DC 6008            STR              R0, [R1]    ;Escreve na porta N
                                                             o barramento de da
                                                            dos dos pinos [N5-N
                                                            0]
  184 000000DE 4770            BX               LR          ;Retorno
  185 000000E0         ; ****************************************
  186 000000E0         
  187 000000E0         ; ------------------------------------------------------
                       -------------------------
  188 000000E0         ; Função PortJ_Input
  189 000000E0         ; Parâmetro de entrada: Não tem
  190 000000E0         ; Parâmetro de saída: R0 --> o valor da leitura
  191 000000E0         PortJ_Input
  192 000000E0         ; ****************************************
  193 000000E0 4919            LDR              R1, =GPIO_PORTJ_AHB_DATA_R ;Car
                                                            rega o valor do off
                                                            set do data registe
                                                            r
  194 000000E2 6808            LDR              R0, [R1]    ;Lê no barramento d
                                                            e dados dos pinos [
                                                            J1-J0]
  195 000000E4 4770            BX               LR          ;Retorno
  196 000000E6         ; ****************************************
  197 000000E6         
  198 000000E6         
  199 000000E6         GPIOPortJ_Handler
  200 000000E6 4914            LDR              R1, =GPIO_PORTJ_AHB_ICR_R
  201 000000E8 F04F 0001       MOV              R0, #0x00000001 ;
  202 000000EC 6008            STR              R0, [R1]    ;limpando a interru
                                                            pção (ack)
  203 000000EE         



ARM Macro Assembler    Page 8 


  204 000000EE F04F 0301       MOV              R3, #1      ;FLAG
  205 000000F2 4770            BX               LR          ;retorno
  206 000000F4         
  207 000000F4                 ALIGN                        ; garante que o fim
                                                             da seção está alin
                                                            hada 
  208 000000F4                 END                          ; fim do arquivo
              400FE608 
              400FEA08 
              40060528 
              40064528 
              4006052C 
              4006452C 
              40064400 
              40060400 
              40064420 
              40060420 
              4006451C 
              4006051C 
              40060510 
              40060410 
              40060404 
              40060408 
              4006040C 
              4006041C 
              E000E430 
              E000E104 
              400643FC 
              400603FC 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\gpio.d -o.\objects\gpio.o -I.\RTE\_Target_1 -IC:\Keil
_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -IC:\Keil_v5\ARM\CMSIS\
Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --
predefine="TM4C1294NCPDT SETA 1" --list=.\listings\gpio.lst gpio.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 58 in file gpio.s
   Uses
      None
Comment: .text unused
EsperaGPIO 0000000E

Symbol: EsperaGPIO
   Definitions
      At line 83 in file gpio.s
   Uses
      At line 87 in file gpio.s
Comment: EsperaGPIO used once
GPIOPortJ_Handler 000000E6

Symbol: GPIOPortJ_Handler
   Definitions
      At line 199 in file gpio.s
   Uses
      At line 65 in file gpio.s
Comment: GPIOPortJ_Handler used once
GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 72 in file gpio.s
   Uses
      At line 61 in file gpio.s
Comment: GPIO_Init used once
PortJ_Input 000000E0

Symbol: PortJ_Input
   Definitions
      At line 191 in file gpio.s
   Uses
      At line 63 in file gpio.s
Comment: PortJ_Input used once
PortN_Output 000000D0

Symbol: PortN_Output
   Definitions
      At line 176 in file gpio.s
   Uses
      At line 62 in file gpio.s
Comment: PortN_Output used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BIT0 00000001

Symbol: BIT0
   Definitions
      At line 13 in file gpio.s
   Uses
      At line 104 in file gpio.s
      At line 121 in file gpio.s
      At line 128 in file gpio.s
      At line 135 in file gpio.s

BIT1 00000002

Symbol: BIT1
   Definitions
      At line 14 in file gpio.s
   Uses
      At line 105 in file gpio.s
      At line 122 in file gpio.s
      At line 129 in file gpio.s
      At line 136 in file gpio.s

GPIO_PORTJ 00000100

Symbol: GPIO_PORTJ
   Definitions
      At line 41 in file gpio.s
   Uses
      At line 79 in file gpio.s
      At line 85 in file gpio.s

GPIO_PORTJ_AHB_AFSEL_R 40060420

Symbol: GPIO_PORTJ_AHB_AFSEL_R
   Definitions
      At line 27 in file gpio.s
   Uses
      At line 116 in file gpio.s
Comment: GPIO_PORTJ_AHB_AFSEL_R used once
GPIO_PORTJ_AHB_AMSEL_R 40060528

Symbol: GPIO_PORTJ_AHB_AMSEL_R
   Definitions
      At line 24 in file gpio.s
   Uses
      At line 91 in file gpio.s
Comment: GPIO_PORTJ_AHB_AMSEL_R used once
GPIO_PORTJ_AHB_CR_R 40060524

Symbol: GPIO_PORTJ_AHB_CR_R
   Definitions
      At line 23 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_CR_R unused
GPIO_PORTJ_AHB_DATA_R 400603FC

Symbol: GPIO_PORTJ_AHB_DATA_R
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 30 in file gpio.s
   Uses
      At line 193 in file gpio.s
Comment: GPIO_PORTJ_AHB_DATA_R used once
GPIO_PORTJ_AHB_DEN_R 4006051C

Symbol: GPIO_PORTJ_AHB_DEN_R
   Definitions
      At line 28 in file gpio.s
   Uses
      At line 126 in file gpio.s
Comment: GPIO_PORTJ_AHB_DEN_R used once
GPIO_PORTJ_AHB_DIR_R 40060400

Symbol: GPIO_PORTJ_AHB_DIR_R
   Definitions
      At line 26 in file gpio.s
   Uses
      At line 108 in file gpio.s
Comment: GPIO_PORTJ_AHB_DIR_R used once
GPIO_PORTJ_AHB_IBE_R 40060408

Symbol: GPIO_PORTJ_AHB_IBE_R
   Definitions
      At line 32 in file gpio.s
   Uses
      At line 148 in file gpio.s
Comment: GPIO_PORTJ_AHB_IBE_R used once
GPIO_PORTJ_AHB_ICR_R 4006041C

Symbol: GPIO_PORTJ_AHB_ICR_R
   Definitions
      At line 37 in file gpio.s
   Uses
      At line 154 in file gpio.s
      At line 200 in file gpio.s

GPIO_PORTJ_AHB_IEV_R 4006040C

Symbol: GPIO_PORTJ_AHB_IEV_R
   Definitions
      At line 33 in file gpio.s
   Uses
      At line 151 in file gpio.s
Comment: GPIO_PORTJ_AHB_IEV_R used once
GPIO_PORTJ_AHB_IM_R 40060410

Symbol: GPIO_PORTJ_AHB_IM_R
   Definitions
      At line 36 in file gpio.s
   Uses
      At line 140 in file gpio.s
      At line 158 in file gpio.s

GPIO_PORTJ_AHB_IS_R 40060404

Symbol: GPIO_PORTJ_AHB_IS_R
   Definitions
      At line 31 in file gpio.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 145 in file gpio.s
Comment: GPIO_PORTJ_AHB_IS_R used once
GPIO_PORTJ_AHB_LOCK_R 40060520

Symbol: GPIO_PORTJ_AHB_LOCK_R
   Definitions
      At line 22 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_LOCK_R unused
GPIO_PORTJ_AHB_MIS_R 40060418

Symbol: GPIO_PORTJ_AHB_MIS_R
   Definitions
      At line 35 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_MIS_R unused
GPIO_PORTJ_AHB_PCTL_R 4006052C

Symbol: GPIO_PORTJ_AHB_PCTL_R
   Definitions
      At line 25 in file gpio.s
   Uses
      At line 98 in file gpio.s
Comment: GPIO_PORTJ_AHB_PCTL_R used once
GPIO_PORTJ_AHB_PUR_R 40060510

Symbol: GPIO_PORTJ_AHB_PUR_R
   Definitions
      At line 29 in file gpio.s
   Uses
      At line 134 in file gpio.s
Comment: GPIO_PORTJ_AHB_PUR_R used once
GPIO_PORTJ_AHB_RIS_R 40060414

Symbol: GPIO_PORTJ_AHB_RIS_R
   Definitions
      At line 34 in file gpio.s
   Uses
      None
Comment: GPIO_PORTJ_AHB_RIS_R unused
GPIO_PORTN 00001000

Symbol: GPIO_PORTN
   Definitions
      At line 52 in file gpio.s
   Uses
      At line 78 in file gpio.s
      At line 84 in file gpio.s

GPIO_PORTN_AHB_AFSEL_R 40064420

Symbol: GPIO_PORTN_AHB_AFSEL_R
   Definitions
      At line 48 in file gpio.s
   Uses
      At line 114 in file gpio.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Absolute symbols

Comment: GPIO_PORTN_AHB_AFSEL_R used once
GPIO_PORTN_AHB_AMSEL_R 40064528

Symbol: GPIO_PORTN_AHB_AMSEL_R
   Definitions
      At line 45 in file gpio.s
   Uses
      At line 93 in file gpio.s
Comment: GPIO_PORTN_AHB_AMSEL_R used once
GPIO_PORTN_AHB_CR_R 40064524

Symbol: GPIO_PORTN_AHB_CR_R
   Definitions
      At line 44 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN_AHB_CR_R unused
GPIO_PORTN_AHB_DATA_R 400643FC

Symbol: GPIO_PORTN_AHB_DATA_R
   Definitions
      At line 51 in file gpio.s
   Uses
      At line 178 in file gpio.s
Comment: GPIO_PORTN_AHB_DATA_R used once
GPIO_PORTN_AHB_DEN_R 4006451C

Symbol: GPIO_PORTN_AHB_DEN_R
   Definitions
      At line 49 in file gpio.s
   Uses
      At line 119 in file gpio.s
Comment: GPIO_PORTN_AHB_DEN_R used once
GPIO_PORTN_AHB_DIR_R 40064400

Symbol: GPIO_PORTN_AHB_DIR_R
   Definitions
      At line 47 in file gpio.s
   Uses
      At line 103 in file gpio.s
Comment: GPIO_PORTN_AHB_DIR_R used once
GPIO_PORTN_AHB_LOCK_R 40064520

Symbol: GPIO_PORTN_AHB_LOCK_R
   Definitions
      At line 43 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN_AHB_LOCK_R unused
GPIO_PORTN_AHB_PCTL_R 4006452C

Symbol: GPIO_PORTN_AHB_PCTL_R
   Definitions
      At line 46 in file gpio.s
   Uses
      At line 100 in file gpio.s
Comment: GPIO_PORTN_AHB_PCTL_R used once
GPIO_PORTN_AHB_PUR_R 40064510




ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Absolute symbols

Symbol: GPIO_PORTN_AHB_PUR_R
   Definitions
      At line 50 in file gpio.s
   Uses
      None
Comment: GPIO_PORTN_AHB_PUR_R unused
NVIC_DIS1_R E000E184

Symbol: NVIC_DIS1_R
   Definitions
      At line 39 in file gpio.s
   Uses
      None
Comment: NVIC_DIS1_R unused
NVIC_EN1_R E000E104

Symbol: NVIC_EN1_R
   Definitions
      At line 40 in file gpio.s
   Uses
      At line 164 in file gpio.s
Comment: NVIC_EN1_R used once
NVIC_PRI12_R E000E430

Symbol: NVIC_PRI12_R
   Definitions
      At line 38 in file gpio.s
   Uses
      At line 161 in file gpio.s
Comment: NVIC_PRI12_R used once
SYSCTL_PRGPIO_R 400FEA08

Symbol: SYSCTL_PRGPIO_R
   Definitions
      At line 18 in file gpio.s
   Uses
      At line 82 in file gpio.s
Comment: SYSCTL_PRGPIO_R used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 17 in file gpio.s
   Uses
      At line 77 in file gpio.s
Comment: SYSCTL_RCGCGPIO_R used once
34 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

EnableInterrupts 00000000

Symbol: EnableInterrupts
   Definitions
      At line 64 in file gpio.s
   Uses
      At line 169 in file gpio.s
Comment: EnableInterrupts used once
1 symbol
377 symbols in table
